{"ast":null,"code":"import { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, withCtx as _withCtx } from \"vue\";\nimport { computed } from 'vue';\nimport { getButtonColor } from '@/colors.js';\nimport Icon from '@/components/Icon.vue';\nexport default {\n  props: {\n    label: {\n      type: [String, Number],\n      default: null\n    },\n    icon: {\n      type: String,\n      default: null\n    },\n    href: {\n      type: String,\n      default: null\n    },\n    target: {\n      type: String,\n      default: null\n    },\n    to: {\n      type: [String, Object],\n      default: null\n    },\n    type: {\n      type: String,\n      default: null\n    },\n    color: {\n      type: String,\n      default: 'white'\n    },\n    as: {\n      type: String,\n      default: null\n    },\n    small: Boolean,\n    outline: Boolean,\n    active: Boolean,\n    disabled: Boolean\n  },\n\n  setup(__props) {\n    const props = __props;\n    const is = computed(() => {\n      if (props.as) {\n        return props.as;\n      }\n\n      if (props.to) {\n        return 'router-link';\n      }\n\n      if (props.href) {\n        return 'a';\n      }\n\n      return 'button';\n    });\n    const computedType = computed(() => {\n      if (is.value === 'button') {\n        return props.type ?? 'button';\n      }\n\n      return null;\n    });\n    const labelClass = computed(() => props.small && props.icon ? 'px-1' : 'px-2');\n    const componentClass = computed(() => {\n      const base = ['inline-flex', 'cursor-pointer', 'justify-center', 'items-center', 'whitespace-nowrap', 'focus:outline-none', 'transition-colors', 'focus:ring', 'duration-150', 'border', 'rounded', props.active ? 'ring ring-black dark:ring-white' : 'ring-blue-700', props.small ? 'p-1' : 'p-2', getButtonColor(props.color, props.outline, !props.disabled)];\n\n      if (props.disabled) {\n        base.push('cursor-not-allowed', props.outline ? 'opacity-50' : 'opacity-70');\n      }\n\n      return base;\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createBlock(_resolveDynamicComponent(_unref(is)), {\n        class: _normalizeClass(_unref(componentClass)),\n        href: __props.href,\n        type: _unref(computedType),\n        to: __props.to,\n        target: __props.target,\n        disabled: __props.disabled\n      }, {\n        default: _withCtx(() => [__props.icon ? (_openBlock(), _createBlock(Icon, {\n          key: 0,\n          path: __props.icon\n        }, null, 8, [\"path\"])) : _createCommentVNode(\"\", true), __props.label ? (_openBlock(), _createElementBlock(\"span\", {\n          key: 1,\n          class: _normalizeClass(_unref(labelClass))\n        }, _toDisplayString(__props.label), 3)) : _createCommentVNode(\"\", true)]),\n        _: 1\n      }, 8, [\"class\", \"href\", \"type\", \"to\", \"target\", \"disabled\"]);\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/components/JbButton.vue"],"names":[],"mappings":";AACA,SAAS,QAAT,QAAyB,KAAzB;AACA,SAAS,cAAT,QAA+B,aAA/B;AACA,OAAO,IAAP,MAAiB,uBAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,UAAM,EAAE,GAAG,QAAQ,CAAC,MAAM;AACxB,UAAI,KAAK,CAAC,EAAV,EAAc;AACZ,eAAO,KAAK,CAAC,EAAb;AACD;;AAED,UAAI,KAAK,CAAC,EAAV,EAAc;AACZ,eAAO,aAAP;AACD;;AAED,UAAI,KAAK,CAAC,IAAV,EAAgB;AACd,eAAO,GAAP;AACD;;AAED,aAAO,QAAP;AACD,KAdkB,CAAnB;AAgBA,UAAM,YAAY,GAAG,QAAQ,CAAC,MAAM;AAClC,UAAI,EAAE,CAAC,KAAH,KAAa,QAAjB,EAA2B;AACzB,eAAO,KAAK,CAAC,IAAN,IAAc,QAArB;AACD;;AAED,aAAO,IAAP;AACD,KAN4B,CAA7B;AAQA,UAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,KAAK,CAAC,KAAN,IAAe,KAAK,CAAC,IAArB,GAA4B,MAA5B,GAAqC,MAA5C,CAA3B;AAEA,UAAM,cAAc,GAAG,QAAQ,CAAC,MAAM;AACpC,YAAM,IAAI,GAAG,CACX,aADW,EAEX,gBAFW,EAGX,gBAHW,EAIX,cAJW,EAKX,mBALW,EAMX,oBANW,EAOX,mBAPW,EAQX,YARW,EASX,cATW,EAUX,QAVW,EAWX,SAXW,EAYX,KAAK,CAAC,MAAN,GAAe,iCAAf,GAAmD,eAZxC,EAaX,KAAK,CAAC,KAAN,GAAc,KAAd,GAAsB,KAbX,EAcX,cAAc,CAAC,KAAK,CAAC,KAAP,EAAc,KAAK,CAAC,OAApB,EAA6B,CAAC,KAAK,CAAC,QAApC,CAdH,CAAb;;AAiBA,UAAI,KAAK,CAAC,QAAV,EAAoB;AAClB,QAAA,IAAI,CAAC,IAAL,CAAU,oBAAV,EAAgC,KAAK,CAAC,OAAN,GAAgB,YAAhB,GAA+B,YAA/D;AACD;;AAED,aAAO,IAAP;AACD,KAvB8B,CAA/B","sourcesContent":["<script setup>\nimport { computed } from 'vue'\nimport { getButtonColor } from '@/colors.js'\nimport Icon from '@/components/Icon.vue'\n\nconst props = defineProps({\n  label: {\n    type: [String, Number],\n    default: null\n  },\n  icon: {\n    type: String,\n    default: null\n  },\n  href: {\n    type: String,\n    default: null\n  },\n  target: {\n    type: String,\n    default: null\n  },\n  to: {\n    type: [String, Object],\n    default: null\n  },\n  type: {\n    type: String,\n    default: null\n  },\n  color: {\n    type: String,\n    default: 'white'\n  },\n  as: {\n    type: String,\n    default: null\n  },\n  small: Boolean,\n  outline: Boolean,\n  active: Boolean,\n  disabled: Boolean\n})\n\nconst is = computed(() => {\n  if (props.as) {\n    return props.as\n  }\n\n  if (props.to) {\n    return 'router-link'\n  }\n\n  if (props.href) {\n    return 'a'\n  }\n\n  return 'button'\n})\n\nconst computedType = computed(() => {\n  if (is.value === 'button') {\n    return props.type ?? 'button'\n  }\n\n  return null\n})\n\nconst labelClass = computed(() => props.small && props.icon ? 'px-1' : 'px-2')\n\nconst componentClass = computed(() => {\n  const base = [\n    'inline-flex',\n    'cursor-pointer',\n    'justify-center',\n    'items-center',\n    'whitespace-nowrap',\n    'focus:outline-none',\n    'transition-colors',\n    'focus:ring',\n    'duration-150',\n    'border',\n    'rounded',\n    props.active ? 'ring ring-black dark:ring-white' : 'ring-blue-700',\n    props.small ? 'p-1' : 'p-2',\n    getButtonColor(props.color, props.outline, !props.disabled)\n  ]\n\n  if (props.disabled) {\n    base.push('cursor-not-allowed', props.outline ? 'opacity-50' : 'opacity-70')\n  }\n\n  return base\n})\n</script>\n\n<template>\n  <component\n    :is=\"is\"\n    :class=\"componentClass\"\n    :href=\"href\"\n    :type=\"computedType\"\n    :to=\"to\"\n    :target=\"target\"\n    :disabled=\"disabled\"\n  >\n    <icon\n      v-if=\"icon\"\n      :path=\"icon\"\n    />\n    <span\n      v-if=\"label\"\n      :class=\"labelClass\"\n    >{{ label }}</span>\n  </component>\n</template>\n"]},"metadata":{},"sourceType":"module"}