{"ast":null,"code":"import { ref, watch } from 'vue';\nexport default {\n  props: {\n    type: {\n      type: String,\n      default: 'td'\n    }\n  },\n  emits: ['checked'],\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n        emit = _ref.emit;\n    expose();\n    var checked = ref(false);\n    watch(checked, function (newVal) {\n      emit('checked', newVal);\n    });\n    var __returned__ = {\n      emit: emit,\n      checked: checked,\n      ref: ref,\n      watch: watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/components/CheckboxCell.vue"],"names":[],"mappings":"AACA,SAAS,GAAT,EAAc,KAAd,QAA2B,KAA3B;;;;;;;;;;;;;AAWA,QAAM,OAAO,GAAG,GAAG,CAAC,KAAD,CAAnB;AAEA,IAAA,KAAK,CAAC,OAAD,EAAU,UAAA,MAAM,EAAI;AACvB,MAAA,IAAI,CAAC,SAAD,EAAY,MAAZ,CAAJ;AACD,KAFI,CAAL","sourcesContent":["<script setup>\nimport { ref, watch } from 'vue'\n\ndefineProps({\n  type: {\n    type: String,\n    default: 'td'\n  }\n})\n\nconst emit = defineEmits(['checked'])\n\nconst checked = ref(false)\n\nwatch(checked, newVal => {\n  emit('checked', newVal)\n})\n</script>\n\n<template>\n  <component\n    :is=\"type\"\n    class=\"checkbox-cell\"\n  >\n    <label class=\"checkbox\">\n      <input\n        v-model=\"checked\"\n        type=\"checkbox\"\n      >\n      <span class=\"check\" />\n    </label>\n  </component>\n</template>\n"]},"metadata":{},"sourceType":"module"}