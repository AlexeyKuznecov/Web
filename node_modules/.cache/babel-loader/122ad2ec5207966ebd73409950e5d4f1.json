{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createVNode as _createVNode, unref as _unref, withCtx as _withCtx, withModifiers as _withModifiers, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"grid grid-cols-1 lg:grid-cols-2 gap-6\"\n};\nimport { ref, reactive } from 'vue';\nimport { useStore } from 'vuex';\nimport { mdiAccount, mdiAccountCircle, mdiLock, mdiMail, mdiAsterisk, mdiFormTextboxPassword } from '@mdi/js';\nimport MainSection from '@/components/MainSection.vue';\nimport CardComponent from '@/components/CardComponent.vue';\nimport TitleBar from '@/components/TitleBar.vue';\nimport Divider from '@/components/Divider.vue';\nimport Field from '@/components/Field.vue';\nimport Control from '@/components/Control.vue';\nimport FilePicker from '@/components/FilePicker.vue';\nimport JbButton from '@/components/JbButton.vue';\nimport BottomOtherPagesSection from '@/components/BottomOtherPagesSection.vue';\nimport JbButtons from '@/components/JbButtons.vue';\nimport UserCard from '@/components/UserCard.vue';\nexport default {\n  setup: function setup(__props) {\n    var store = useStore();\n    var titleStack = ref(['Admin', 'Profile']);\n    var profileForm = reactive({\n      name: store.state.userName,\n      email: store.state.userEmail\n    });\n    var passwordForm = reactive({\n      password_current: '',\n      password: '',\n      password_confirmation: ''\n    });\n\n    var submitProfile = function submitProfile() {\n      store.commit('user', profileForm);\n    };\n\n    var submitPass = function submitPass() {//\n    };\n\n    return function (_ctx, _cache) {\n      return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(TitleBar, {\n        \"title-stack\": titleStack.value\n      }, null, 8, [\"title-stack\"]), _createVNode(UserCard), _createVNode(MainSection, null, {\n        default: _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_1, [_createVNode(CardComponent, {\n            title: \"Edit Profile\",\n            icon: _unref(mdiAccountCircle),\n            form: \"\",\n            onSubmit: _withModifiers(submitProfile, [\"prevent\"])\n          }, {\n            default: _withCtx(function () {\n              return [_createVNode(Field, {\n                label: \"Avatar\",\n                help: \"Max 500kb\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode(FilePicker)];\n                }),\n                _: 1\n              }), _createVNode(Field, {\n                label: \"Name\",\n                help: \"Required. Your name\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode(Control, {\n                    modelValue: _unref(profileForm).name,\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                      return _unref(profileForm).name = $event;\n                    }),\n                    icon: _unref(mdiAccount),\n                    name: \"username\",\n                    required: \"\",\n                    autocomplete: \"username\"\n                  }, null, 8, [\"modelValue\", \"icon\"])];\n                }),\n                _: 1\n              }), _createVNode(Field, {\n                label: \"E-mail\",\n                help: \"Required. Your e-mail\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode(Control, {\n                    modelValue: _unref(profileForm).email,\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                      return _unref(profileForm).email = $event;\n                    }),\n                    icon: _unref(mdiMail),\n                    type: \"email\",\n                    name: \"email\",\n                    required: \"\",\n                    autocomplete: \"email\"\n                  }, null, 8, [\"modelValue\", \"icon\"])];\n                }),\n                _: 1\n              }), _createVNode(Divider), _createVNode(JbButtons, null, {\n                default: _withCtx(function () {\n                  return [_createVNode(JbButton, {\n                    color: \"info\",\n                    type: \"submit\",\n                    label: \"Submit\"\n                  }), _createVNode(JbButton, {\n                    color: \"info\",\n                    label: \"Options\",\n                    outline: \"\"\n                  })];\n                }),\n                _: 1\n              })];\n            }),\n            _: 1\n          }, 8, [\"icon\", \"onSubmit\"]), _createVNode(CardComponent, {\n            title: \"Change Password\",\n            icon: _unref(mdiLock),\n            form: \"\",\n            onSubmit: _withModifiers(submitPass, [\"prevent\"])\n          }, {\n            default: _withCtx(function () {\n              return [_createVNode(Field, {\n                label: \"Current password\",\n                help: \"Required. Your current password\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode(Control, {\n                    modelValue: _unref(passwordForm).password_current,\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                      return _unref(passwordForm).password_current = $event;\n                    }),\n                    icon: _unref(mdiAsterisk),\n                    name: \"password_current\",\n                    type: \"password\",\n                    required: \"\",\n                    autocomplete: \"current-password\"\n                  }, null, 8, [\"modelValue\", \"icon\"])];\n                }),\n                _: 1\n              }), _createVNode(Divider), _createVNode(Field, {\n                label: \"New password\",\n                help: \"Required. New password\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode(Control, {\n                    modelValue: _unref(passwordForm).password,\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                      return _unref(passwordForm).password = $event;\n                    }),\n                    icon: _unref(mdiFormTextboxPassword),\n                    name: \"password\",\n                    type: \"password\",\n                    required: \"\",\n                    autocomplete: \"new-password\"\n                  }, null, 8, [\"modelValue\", \"icon\"])];\n                }),\n                _: 1\n              }), _createVNode(Field, {\n                label: \"Confirm password\",\n                help: \"Required. New password one more time\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode(Control, {\n                    modelValue: _unref(passwordForm).password_confirmation,\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                      return _unref(passwordForm).password_confirmation = $event;\n                    }),\n                    icon: _unref(mdiFormTextboxPassword),\n                    name: \"password_confirmation\",\n                    type: \"password\",\n                    required: \"\",\n                    autocomplete: \"new-password\"\n                  }, null, 8, [\"modelValue\", \"icon\"])];\n                }),\n                _: 1\n              }), _createVNode(Divider), _createVNode(JbButtons, null, {\n                default: _withCtx(function () {\n                  return [_createVNode(JbButton, {\n                    type: \"submit\",\n                    color: \"info\",\n                    label: \"Submit\"\n                  }), _createVNode(JbButton, {\n                    color: \"info\",\n                    label: \"Options\",\n                    outline: \"\"\n                  })];\n                }),\n                _: 1\n              })];\n            }),\n            _: 1\n          }, 8, [\"icon\", \"onSubmit\"])])];\n        }),\n        _: 1\n      }), _createVNode(BottomOtherPagesSection)], 64);\n    };\n  }\n};","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/views/Profile.vue"],"names":[],"mappings":";;;;;AACA,SAAS,GAAT,EAAc,QAAd,QAA8B,KAA9B;AACA,SAAS,QAAT,QAAyB,MAAzB;AACA,SAAS,UAAT,EAAqB,gBAArB,EAAuC,OAAvC,EAAgD,OAAhD,EAAyD,WAAzD,EAAsE,sBAAtE,QAAoG,SAApG;AACA,OAAO,WAAP,MAAwB,8BAAxB;AACA,OAAO,aAAP,MAA0B,gCAA1B;AACA,OAAO,QAAP,MAAqB,2BAArB;AACA,OAAO,OAAP,MAAoB,0BAApB;AACA,OAAO,KAAP,MAAkB,wBAAlB;AACA,OAAO,OAAP,MAAoB,0BAApB;AACA,OAAO,UAAP,MAAuB,6BAAvB;AACA,OAAO,QAAP,MAAqB,2BAArB;AACA,OAAO,uBAAP,MAAoC,0CAApC;AACA,OAAO,SAAP,MAAsB,4BAAtB;AACA,OAAO,QAAP,MAAqB,2BAArB;;;AAEA,QAAM,KAAK,GAAG,QAAQ,EAAtB;AAEA,QAAM,UAAU,GAAG,GAAG,CAAC,CAAC,OAAD,EAAU,SAAV,CAAD,CAAtB;AAEA,QAAM,WAAW,GAAG,QAAQ,CAAC;AAC3B,MAAA,IAAI,EAAE,KAAK,CAAC,KAAN,CAAY,QADS;AAE3B,MAAA,KAAK,EAAE,KAAK,CAAC,KAAN,CAAY;AAFQ,KAAD,CAA5B;AAKA,QAAM,YAAY,GAAG,QAAQ,CAAC;AAC5B,MAAA,gBAAgB,EAAE,EADU;AAE5B,MAAA,QAAQ,EAAE,EAFkB;AAG5B,MAAA,qBAAqB,EAAE;AAHK,KAAD,CAA7B;;AAMA,QAAM,aAAa,GAAG,SAAhB,aAAgB,GAAM;AAC1B,MAAA,KAAK,CAAC,MAAN,CAAa,MAAb,EAAqB,WAArB;AACD,KAFD;;AAIA,QAAM,UAAU,GAAG,SAAb,UAAa,GAAM,CACvB;AACD,KAFD","sourcesContent":["<script setup>\nimport { ref, reactive } from 'vue'\nimport { useStore } from 'vuex'\nimport { mdiAccount, mdiAccountCircle, mdiLock, mdiMail, mdiAsterisk, mdiFormTextboxPassword } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport TitleBar from '@/components/TitleBar.vue'\nimport Divider from '@/components/Divider.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport FilePicker from '@/components/FilePicker.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport BottomOtherPagesSection from '@/components/BottomOtherPagesSection.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport UserCard from '@/components/UserCard.vue'\n\nconst store = useStore()\n\nconst titleStack = ref(['Admin', 'Profile'])\n\nconst profileForm = reactive({\n  name: store.state.userName,\n  email: store.state.userEmail\n})\n\nconst passwordForm = reactive({\n  password_current: '',\n  password: '',\n  password_confirmation: ''\n})\n\nconst submitProfile = () => {\n  store.commit('user', profileForm)\n}\n\nconst submitPass = () => {\n  //\n}\n</script>\n\n<template>\n  <title-bar :title-stack=\"titleStack\" />\n\n  <user-card />\n\n  <main-section>\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <card-component\n        title=\"Edit Profile\"\n        :icon=\"mdiAccountCircle\"\n        form\n        @submit.prevent=\"submitProfile\"\n      >\n        <field\n          label=\"Avatar\"\n          help=\"Max 500kb\"\n        >\n          <file-picker />\n        </field>\n\n        <field\n          label=\"Name\"\n          help=\"Required. Your name\"\n        >\n          <control\n            v-model=\"profileForm.name\"\n            :icon=\"mdiAccount\"\n            name=\"username\"\n            required\n            autocomplete=\"username\"\n          />\n        </field>\n        <field\n          label=\"E-mail\"\n          help=\"Required. Your e-mail\"\n        >\n          <control\n            v-model=\"profileForm.email\"\n            :icon=\"mdiMail\"\n            type=\"email\"\n            name=\"email\"\n            required\n            autocomplete=\"email\"\n          />\n        </field>\n\n        <divider />\n\n        <jb-buttons>\n          <jb-button\n            color=\"info\"\n            type=\"submit\"\n            label=\"Submit\"\n          />\n          <jb-button\n            color=\"info\"\n            label=\"Options\"\n            outline\n          />\n        </jb-buttons>\n      </card-component>\n\n      <card-component\n        title=\"Change Password\"\n        :icon=\"mdiLock\"\n        form\n        @submit.prevent=\"submitPass\"\n      >\n        <field\n          label=\"Current password\"\n          help=\"Required. Your current password\"\n        >\n          <control\n            v-model=\"passwordForm.password_current\"\n            :icon=\"mdiAsterisk\"\n            name=\"password_current\"\n            type=\"password\"\n            required\n            autocomplete=\"current-password\"\n          />\n        </field>\n\n        <divider />\n\n        <field\n          label=\"New password\"\n          help=\"Required. New password\"\n        >\n          <control\n            v-model=\"passwordForm.password\"\n            :icon=\"mdiFormTextboxPassword\"\n            name=\"password\"\n            type=\"password\"\n            required\n            autocomplete=\"new-password\"\n          />\n        </field>\n\n        <field\n          label=\"Confirm password\"\n          help=\"Required. New password one more time\"\n        >\n          <control\n            v-model=\"passwordForm.password_confirmation\"\n            :icon=\"mdiFormTextboxPassword\"\n            name=\"password_confirmation\"\n            type=\"password\"\n            required\n            autocomplete=\"new-password\"\n          />\n        </field>\n\n        <divider />\n\n        <jb-buttons>\n          <jb-button\n            type=\"submit\"\n            color=\"info\"\n            label=\"Submit\"\n          />\n          <jb-button\n            color=\"info\"\n            label=\"Options\"\n            outline\n          />\n        </jb-buttons>\n      </card-component>\n    </div>\n  </main-section>\n\n  <bottom-other-pages-section />\n</template>\n"]},"metadata":{},"sourceType":"module"}