{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, createElementVNode as _createElementVNode, createVNode as _createVNode, createBlock as _createBlock, withCtx as _withCtx, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  class: \"space-y-3\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  class: \"text-2xl\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createBlock($setup[\"Overlay\"], {\n    onOverlayClick: $setup.cancel\n  }, {\n    default: _withCtx(function () {\n      return [_withDirectives(_createVNode($setup[\"CardComponent\"], {\n        title: $props.title,\n        class: \"shadow-lg w-full max-h-modal md:w-3/5 lg:w-2/5 z-50\",\n        \"header-icon\": $setup.mdiClose,\n        onHeaderIconClick: $setup.cancel\n      }, {\n        default: _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_1, [$props.largeTitle ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_2, _toDisplayString($props.largeTitle), 1\n          /* TEXT */\n          )) : _createCommentVNode(\"v-if\", true), _renderSlot(_ctx.$slots, \"default\")]), _createVNode($setup[\"Divider\"]), _createVNode($setup[\"JbButtons\"], null, {\n            default: _withCtx(function () {\n              return [_createVNode($setup[\"JbButton\"], {\n                label: $props.buttonLabel,\n                color: $props.button,\n                onClick: $setup.confirm\n              }, null, 8\n              /* PROPS */\n              , [\"label\", \"color\"]), $props.hasCancel ? (_openBlock(), _createBlock($setup[\"JbButton\"], {\n                key: 0,\n                label: \"Cancel\",\n                color: $props.button,\n                outline: \"\",\n                onClick: $setup.cancel\n              }, null, 8\n              /* PROPS */\n              , [\"color\"])) : _createCommentVNode(\"v-if\", true)];\n            }),\n            _: 1\n            /* STABLE */\n\n          })];\n        }),\n        _: 3\n        /* FORWARDED */\n\n      }, 8\n      /* PROPS */\n      , [\"title\", \"header-icon\"]), [[_vShow, $setup.value]])];\n    }),\n    _: 3\n    /* FORWARDED */\n\n  }, 512\n  /* NEED_PATCH */\n  )), [[_vShow, $setup.value]]);\n}","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/components/ModalBox.vue"],"names":[],"mappings":";;AA8DW,EAAA,KAAK,EAAC;;;;AAGP,EAAA,KAAK,EAAC;;;wCAdd,YAAA,CAsCU,MAAA,CAAA,SAAA,CAtCV,EAsCU;AApCP,IAAA,cAAa,EAAE,MAAA,CAAA;AAoCR,GAtCV,EAEwB;sBAEtB;AAAA,aAiCiB,C,gBAjCjB,YAAA,CAiCiB,MAAA,CAAA,eAAA,CAjCjB,EAiCiB;AA/Bd,QAAA,KAAK,EAAE,MAAA,CAAA,KA+BO;AA9Bf,QAAA,KAAK,EAAC,qDA8BS;AA7Bd,uBAAa,MAAA,CAAA,QA6BC;AA5Bd,QAAA,iBAAiB,EAAE,MAAA,CAAA;AA4BL,OAjCjB,E;0BAOE;AAAA,iBAQM,CARN,mBAAA,CAQM,KARN,EAAA,UAAA,EAQM,CANI,MAAA,CAAA,U,kBADR,mBAAA,CAKK,IALL,EAAA,UAAA,EAKK,gBAAA,CADA,MAAA,CAAA,UACA,CALL,EAIe;AAAA;AAJf,W,qCAOI,EADJ,WAAA,CAAQ,IAAA,CAAA,MAAR,EAAQ,SAAR,CACI,CARN,CAQM,EAEN,YAAA,CAAW,MAAA,CAAA,SAAA,CAAX,CAFM,EAIN,YAAA,CAaa,MAAA,CAAA,WAAA,CAbb,EAaa,IAbb,EAaa;8BAZX;AAAA,qBAIE,CAJF,YAAA,CAIE,MAAA,CAAA,UAAA,CAJF,EAIE;AAHC,gBAAA,KAAK,EAAE,MAAA,CAAA,WAGR;AAFC,gBAAA,KAAK,EAAE,MAAA,CAAA,MAER;AADC,gBAAA,OAAK,EAAE,MAAA,CAAA;AACR,eAJF,E,IAAA,E;;AAAA,gB,kBAAA,CAIE,EAEM,MAAA,CAAA,S,kBADR,YAAA,CAME,MAAA,CAAA,UAAA,CANF,EAME;sBAAA;AAJA,gBAAA,KAAK,EAAC,QAIN;AAHC,gBAAA,KAAK,EAAE,MAAA,CAAA,MAGR;AAFA,gBAAA,OAAO,EAAP,EAEA;AADC,gBAAA,OAAK,EAAE,MAAA,CAAA;AACR,eANF,E,IAAA,E;;AAAA,gB,SAAA,C,qCADE,CAJF;AAAA,a,CAYW;;;;AAAA,WAbb,CAJM,CARN;AAAA,S;;;;OAPF,E;;AAAA,Q,wBAAA,C,YACU,MAAA,CAAA,K,GAgCO,CAjCjB;AAAA,K,CAFsB;;;;AAAA,GAFxB,E;;AAAA,G,aACU,MAAA,CAAA,K","sourcesContent":["<script setup>\nimport { computed } from 'vue'\nimport { mdiClose } from '@mdi/js'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Divider from '@/components/Divider.vue'\nimport Overlay from '@/components/Overlay.vue'\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: null\n  },\n  largeTitle: {\n    type: String,\n    default: null\n  },\n  button: {\n    type: String,\n    default: 'info'\n  },\n  buttonLabel: {\n    type: String,\n    default: 'Done'\n  },\n  hasCancel: Boolean,\n  modelValue: {\n    type: [String, Number, Boolean],\n    default: null\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'cancel', 'confirm'])\n\nconst value = computed({\n  get: () => props.modelValue,\n  set: value => emit('update:modelValue', value)\n})\n\nconst confirmCancel = mode => {\n  value.value = false\n  emit(mode)\n}\n\nconst confirm = () => confirmCancel('confirm')\n\nconst cancel = () => confirmCancel('cancel')\n</script>\n\n<template>\n  <overlay\n    v-show=\"value\"\n    @overlay-click=\"cancel\"\n  >\n    <card-component\n      v-show=\"value\"\n      :title=\"title\"\n      class=\"shadow-lg w-full max-h-modal md:w-3/5 lg:w-2/5 z-50\"\n      :header-icon=\"mdiClose\"\n      @header-icon-click=\"cancel\"\n    >\n      <div class=\"space-y-3\">\n        <h1\n          v-if=\"largeTitle\"\n          class=\"text-2xl\"\n        >\n          {{ largeTitle }}\n        </h1>\n        <slot />\n      </div>\n\n      <divider />\n\n      <jb-buttons>\n        <jb-button\n          :label=\"buttonLabel\"\n          :color=\"button\"\n          @click=\"confirm\"\n        />\n        <jb-button\n          v-if=\"hasCancel\"\n          label=\"Cancel\"\n          :color=\"button\"\n          outline\n          @click=\"cancel\"\n        />\n      </jb-buttons>\n    </card-component>\n  </overlay>\n</template>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}