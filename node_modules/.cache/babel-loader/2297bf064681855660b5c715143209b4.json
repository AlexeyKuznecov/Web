{"ast":null,"code":"import { unref as _unref, renderSlot as _renderSlot, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nimport { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport MainSection from '@/components/MainSection.vue';\nexport default {\n  props: {\n    bg: {\n      type: String,\n      required: true,\n      validator: value => ['login', 'error'].includes(value)\n    }\n  },\n\n  setup(__props) {\n    const props = __props;\n    const store = useStore();\n    const darkMode = computed(() => store.state.darkMode);\n    const componentClass = computed(() => {\n      const bgs = {\n        login: 'bg-gradient-to-tr from-purple-400 via-pink-500 to-red-500',\n        loginDark: 'bg-gradient-to-tr from-purple-900 via-pink-900 to-red-900',\n        error: 'bg-gradient-to-tr from-pink-400 via-red-500 to-yellow-500',\n        errorDark: 'bg-gradient-to-tr from-pink-900 via-red-900 to-yellow-900'\n      };\n      const bgKey = darkMode.value ? `${props.bg}Dark` : props.bg;\n      return bgs[bgKey] ?? '';\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createBlock(MainSection, {\n        class: _normalizeClass(_unref(componentClass))\n      }, {\n        default: _withCtx(() => [_renderSlot(_ctx.$slots, \"default\", {\n          cardClass: \"w-11/12 md:w-7/12 lg:w-6/12 xl:w-4/12 shadow-2xl\",\n          cardRounded: \"rounded-lg\"\n        })]),\n        _: 3\n      }, 8, [\"class\"]);\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/components/FullScreenSection.vue"],"names":[],"mappings":";AACA,SAAS,QAAT,QAAyB,KAAzB;AACA,SAAS,QAAT,QAAyB,MAAzB;AACA,OAAO,WAAP,MAAwB,8BAAxB;;;;;;;;;;;;AAUA,UAAM,KAAK,GAAG,QAAQ,EAAtB;AAEA,UAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,KAAK,CAAC,KAAN,CAAY,QAAnB,CAAzB;AAEA,UAAM,cAAc,GAAG,QAAQ,CAAC,MAAM;AACpC,YAAM,GAAG,GAAG;AACV,QAAA,KAAK,EAAE,2DADG;AAEV,QAAA,SAAS,EAAE,2DAFD;AAGV,QAAA,KAAK,EAAE,2DAHG;AAIV,QAAA,SAAS,EAAE;AAJD,OAAZ;AAOA,YAAM,KAAK,GAAG,QAAQ,CAAC,KAAT,GAAkB,GAAE,KAAK,CAAC,EAAG,MAA7B,GAAqC,KAAK,CAAC,EAAzD;AAEA,aAAO,GAAG,CAAC,KAAD,CAAH,IAAc,EAArB;AACD,KAX8B,CAA/B","sourcesContent":["<script setup>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport MainSection from '@/components/MainSection.vue'\n\nconst props = defineProps({\n  bg: {\n    type: String,\n    required: true,\n    validator: value => ['login', 'error'].includes(value)\n  }\n})\n\nconst store = useStore()\n\nconst darkMode = computed(() => store.state.darkMode)\n\nconst componentClass = computed(() => {\n  const bgs = {\n    login: 'bg-gradient-to-tr from-purple-400 via-pink-500 to-red-500',\n    loginDark: 'bg-gradient-to-tr from-purple-900 via-pink-900 to-red-900',\n    error: 'bg-gradient-to-tr from-pink-400 via-red-500 to-yellow-500',\n    errorDark: 'bg-gradient-to-tr from-pink-900 via-red-900 to-yellow-900'\n  }\n\n  const bgKey = darkMode.value ? `${props.bg}Dark` : props.bg\n\n  return bgs[bgKey] ?? ''\n})\n</script>\n\n<template>\n  <main-section :class=\"componentClass\">\n    <slot\n      card-class=\"w-11/12 md:w-7/12 lg:w-6/12 xl:w-4/12 shadow-2xl\"\n      card-rounded=\"rounded-lg\"\n    />\n  </main-section>\n</template>\n"]},"metadata":{},"sourceType":"module"}