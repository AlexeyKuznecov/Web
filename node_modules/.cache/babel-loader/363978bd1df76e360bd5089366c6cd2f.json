{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\";\nvar _hoisted_1 = {\n  class: \"mb-6 last:mb-0\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  class: \"block font-bold mb-2\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  class: \"text-xs text-gray-500 dark:text-gray-400 mt-1\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.label ? (_openBlock(), _createElementBlock(\"label\", _hoisted_2, _toDisplayString($props.label), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n    class: _normalizeClass($setup.wrapperClass)\n  }, [_renderSlot(_ctx.$slots, \"default\")], 2\n  /* CLASS */\n  ), $props.help ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($props.help), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/components/Field.vue"],"names":[],"mappings":";;AAiCO,EAAA,KAAK,EAAC;;;;AAGP,EAAA,KAAK,EAAC;;;;AAON,EAAA,KAAK,EAAC;;;uBAVV,mBAAA,CAcM,KAdN,EAAA,UAAA,EAcM,CAZI,MAAA,CAAA,K,kBADR,mBAAA,CAGoB,OAHpB,EAAA,UAAA,EAGoB,gBAAA,CAAhB,MAAA,CAAA,KAAgB,CAHpB,EAGS;AAAA;AAHT,G,qCAaI,EATJ,mBAAA,CAEM,KAFN,EAEM;AAFA,IAAA,KAAK,EAAA,eAAA,CAAE,MAAA,CAAA,YAAF;AAEL,GAFN,E,CACE,WAAA,CAAQ,IAAA,CAAA,MAAR,EAAQ,SAAR,C,CADF,E;;AAAA,GASI,EALI,MAAA,CAAA,I,kBADR,mBAAA,CAKM,KALN,EAAA,UAAA,EAKM,gBAAA,CADD,MAAA,CAAA,IACC,CALN,EAIS;AAAA;AAJT,G,qCAMI,CAdN,C","sourcesContent":["<script setup>\nimport { computed, useSlots } from 'vue'\n\ndefineProps({\n  label: {\n    type: String,\n    default: null\n  },\n  help: {\n    type: String,\n    default: null\n  }\n})\n\nconst slots = useSlots()\n\nconst wrapperClass = computed(() => {\n  const base = []\n  const slotsLength = slots.default().length\n\n  if (slotsLength > 1) {\n    base.push('grid grid-cols-1 gap-3')\n  }\n\n  if (slotsLength === 2) {\n    base.push('md:grid-cols-2')\n  }\n\n  return base\n})\n</script>\n\n<template>\n  <div class=\"mb-6 last:mb-0\">\n    <label\n      v-if=\"label\"\n      class=\"block font-bold mb-2\"\n    >{{ label }}</label>\n    <div :class=\"wrapperClass\">\n      <slot />\n    </div>\n    <div\n      v-if=\"help\"\n      class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\"\n    >\n      {{ help }}\n    </div>\n  </div>\n</template>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}