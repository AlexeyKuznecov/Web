{"ast":null,"code":"import { reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { axios } from 'axios';\nimport { mdiAccount, mdiAsterisk } from '@mdi/js';\nimport FullScreenSection from '@/components/FullScreenSection.vue';\nimport CardComponent from '@/components/CardComponent.vue';\nimport Field from '@/components/Field.vue';\nimport Control from '@/components/Control.vue';\nimport Divider from '@/components/Divider.vue';\nimport JbButton from '@/components/JbButton.vue';\nimport JbButtons from '@/components/JbButtons.vue';\nexport default {\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var form = reactive({\n      email: '',\n      password: '',\n      username: ''\n    });\n    var showValues = reactive({\n      showRegisterInputsValue: false,\n      showLoginInputsValue: false\n    });\n    var router = useRouter();\n\n    var submit = function submit() {\n      router.push('/');\n    };\n\n    var hideLoginInputs = function hideLoginInputs() {\n      showValues.showLoginInputsValue = false;\n    };\n\n    var showLoginInputs = function showLoginInputs() {\n      showValues.showLoginInputsValue = true;\n      hideRegisterInputs();\n    };\n\n    var hideRegisterInputs = function hideRegisterInputs() {\n      showValues.showRegisterInputsValue = false;\n    };\n\n    var showRegisterInputs = function showRegisterInputs() {\n      showValues.showRegisterInputsValue = true;\n      hideLoginInputs();\n    };\n\n    var checkEmailExistense = function checkEmailExistense() {\n      if (form.email) {\n        var uri = 'https://web.leadertask.com/api/v1/users/exists?email=' + form.email;\n        axios({\n          uri: uri\n        }).then(function () {\n          showLoginInputs();\n          console.log('show login inputs');\n        }).catch(function () {\n          showRegisterInputs();\n          console.log('show register inputs');\n        });\n      }\n    };\n\n    var __returned__ = {\n      form: form,\n      showValues: showValues,\n      router: router,\n      submit: submit,\n      hideLoginInputs: hideLoginInputs,\n      showLoginInputs: showLoginInputs,\n      hideRegisterInputs: hideRegisterInputs,\n      showRegisterInputs: showRegisterInputs,\n      checkEmailExistense: checkEmailExistense,\n      reactive: reactive,\n      useRouter: useRouter,\n      axios: axios,\n      mdiAccount: mdiAccount,\n      mdiAsterisk: mdiAsterisk,\n      FullScreenSection: FullScreenSection,\n      CardComponent: CardComponent,\n      Field: Field,\n      Control: Control,\n      Divider: Divider,\n      JbButton: JbButton,\n      JbButtons: JbButtons\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/views/Login.vue"],"names":[],"mappings":"AACA,SAAS,QAAT,QAAyB,KAAzB;AACA,SAAS,SAAT,QAA0B,YAA1B;AACA,SAAS,KAAT,QAAsB,OAAtB;AACA,SAAS,UAAT,EAAqB,WAArB,QAAwC,SAAxC;AACA,OAAO,iBAAP,MAA8B,oCAA9B;AACA,OAAO,aAAP,MAA0B,gCAA1B;AACA,OAAO,KAAP,MAAkB,wBAAlB;AACA,OAAO,OAAP,MAAoB,0BAApB;AACA,OAAO,OAAP,MAAoB,0BAApB;AACA,OAAO,QAAP,MAAqB,2BAArB;AACA,OAAO,SAAP,MAAsB,4BAAtB;;;;;AAEA,QAAM,IAAI,GAAG,QAAQ,CAAC;AACpB,MAAA,KAAK,EAAE,EADa;AAEpB,MAAA,QAAQ,EAAE,EAFU;AAGpB,MAAA,QAAQ,EAAE;AAHU,KAAD,CAArB;AAMA,QAAM,UAAU,GAAG,QAAQ,CAAC;AAC1B,MAAA,uBAAuB,EAAE,KADC;AAE1B,MAAA,oBAAoB,EAAE;AAFI,KAAD,CAA3B;AAKA,QAAM,MAAM,GAAG,SAAS,EAAxB;;AAEA,QAAM,MAAM,GAAG,SAAT,MAAS,GAAM;AACnB,MAAA,MAAM,CAAC,IAAP,CAAY,GAAZ;AACD,KAFD;;AAIA,QAAM,eAAe,GAAG,SAAlB,eAAkB,GAAM;AAC5B,MAAA,UAAU,CAAC,oBAAX,GAAkC,KAAlC;AACD,KAFD;;AAIA,QAAM,eAAe,GAAG,SAAlB,eAAkB,GAAM;AAC5B,MAAA,UAAU,CAAC,oBAAX,GAAkC,IAAlC;AACA,MAAA,kBAAkB;AACnB,KAHD;;AAKA,QAAM,kBAAkB,GAAG,SAArB,kBAAqB,GAAM;AAC/B,MAAA,UAAU,CAAC,uBAAX,GAAqC,KAArC;AACD,KAFD;;AAIA,QAAM,kBAAkB,GAAG,SAArB,kBAAqB,GAAM;AAC/B,MAAA,UAAU,CAAC,uBAAX,GAAqC,IAArC;AACA,MAAA,eAAe;AAChB,KAHD;;AAKA,QAAM,mBAAmB,GAAG,SAAtB,mBAAsB,GAAM;AAChC,UAAI,IAAI,CAAC,KAAT,EAAgB;AACd,YAAM,GAAG,GAAG,0DAA0D,IAAI,CAAC,KAA3E;AACA,QAAA,KAAK,CAAC;AAAE,UAAA,GAAG,EAAH;AAAF,SAAD,CAAL,CACG,IADH,CACQ,YAAM;AACV,UAAA,eAAe;AACf,UAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;AACD,SAJH,EAKG,KALH,CAKS,YAAM;AACX,UAAA,kBAAkB;AAClB,UAAA,OAAO,CAAC,GAAR,CAAY,sBAAZ;AACD,SARH;AASD;AACF,KAbD","sourcesContent":["<script setup>\nimport { reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { axios } from 'axios'\nimport { mdiAccount, mdiAsterisk } from '@mdi/js'\nimport FullScreenSection from '@/components/FullScreenSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\n\nconst form = reactive({\n  email: '',\n  password: '',\n  username: ''\n})\n\nconst showValues = reactive({\n  showRegisterInputsValue: false,\n  showLoginInputsValue: false\n})\n\nconst router = useRouter()\n\nconst submit = () => {\n  router.push('/')\n}\n\nconst hideLoginInputs = () => {\n  showValues.showLoginInputsValue = false\n}\n\nconst showLoginInputs = () => {\n  showValues.showLoginInputsValue = true\n  hideRegisterInputs()\n}\n\nconst hideRegisterInputs = () => {\n  showValues.showRegisterInputsValue = false\n}\n\nconst showRegisterInputs = () => {\n  showValues.showRegisterInputsValue = true\n  hideLoginInputs()\n}\n\nconst checkEmailExistense = () => {\n  if (form.email) {\n    const uri = 'https://web.leadertask.com/api/v1/users/exists?email=' + form.email\n    axios({ uri })\n      .then(() => {\n        showLoginInputs()\n        console.log('show login inputs')\n      })\n      .catch(() => {\n        showRegisterInputs()\n        console.log('show register inputs')\n      })\n  }\n}\n\n</script>\n<template>\n  <full-screen-section\n    v-slot=\"{ cardClass, cardRounded }\"\n    bg=\"login\"\n  >\n    <card-component\n      :class=\"cardClass\"\n      :rounded=\"cardRounded\"\n      form\n      @submit.prevent=\"submit\"\n    >\n      <field\n        label=\"Email\"\n        help=\"Please enter your email\"\n      >\n        <control\n          v-model=\"form.email\"\n          @blur=\"checkEmailExistense\"\n          :icon=\"mdiAccount\"\n          name=\"email\"\n          autocomplete=\"email\"\n          required\n        />\n      </field>\n\n  <transition-group name=\"slide-fade\">\n    <div v-if=\"showValues.showRegisterInputsValue\">\n      <field\n        label=\"Password\"\n        help=\"Please enter your password\"\n      >\n        <control\n          v-model=\"form.pass\"\n          :icon=\"mdiAsterisk\"\n          type=\"password\"\n          name=\"password\"\n          autocomplete=\"current-password\"\n        />\n      </field>\n    </div>\n  </transition-group>\n\n      <divider />\n\n      <jb-buttons>\n        <jb-button\n          type=\"submit\"\n          color=\"info\"\n          label=\"Login\"\n        />\n      </jb-buttons>\n    </card-component>\n  </full-screen-section>\n</template>\n\n<style>\n\n.error-message {\n  color: #8D021F;\n  font-size: 14px;\n}\n\n.slide-fade-enter-active {\n  transition: all 0.3s ease-out;\n}\n\n.slide-fade-leave-active {\n  transition: all 0.3s cubic-bezier(1, 0.5, 0.8, 1);\n}\n\n.slide-fade-enter-from,\n.slide-fade-leave-to {\n  transform: translateX(100px);\n  opacity: 0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}