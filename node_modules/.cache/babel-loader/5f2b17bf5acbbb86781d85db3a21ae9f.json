{"ast":null,"code":"import _defineProperty from \"/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _mutations;\n\nimport \"core-js/modules/es.object.to-string.js\";\nimport { NAVIGATOR_REQUEST, NAVIGATOR_ERROR, NAVIGATOR_SUCCESS } from '../actions/navigator';\nimport axios from 'axios';\nvar state = {\n  navigator: false,\n  status: '',\n  hasLoadedOnce: false\n};\nvar getters = {\n  getNavigator: function getNavigator(state) {\n    return state.navigator;\n  },\n  authStatus: function authStatus(state) {\n    return state.status;\n  }\n};\n\nvar actions = _defineProperty({}, NAVIGATOR_REQUEST, function (_ref) {\n  var commit = _ref.commit;\n  return new Promise(function (resolve, reject) {\n    commit(NAVIGATOR_REQUEST);\n    var url = 'https://web.leadertask.com/api/v1/navigator?show_compl_tasks=false';\n    axios({\n      url: url,\n      method: 'GET'\n    }).then(function (resp) {\n      commit(NAVIGATOR_SUCCESS, resp);\n      resolve(resp);\n    }).catch(function (err) {\n      commit(NAVIGATOR_ERROR, err);\n      reject(err);\n    });\n  });\n});\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, AUTH_REQUEST, function (state) {\n  state.status = 'loading';\n}), _defineProperty(_mutations, AUTH_SUCCESS, function (state, resp) {\n  state.status = 'success';\n  state.navigator = resp.data;\n  state.hasLoadedOnce = true;\n}), _defineProperty(_mutations, AUTH_ERROR, function (state) {\n  state.status = 'error';\n  state.hasLoadedOnce = true;\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/store/modules/navigator.js"],"names":["NAVIGATOR_REQUEST","NAVIGATOR_ERROR","NAVIGATOR_SUCCESS","axios","state","navigator","status","hasLoadedOnce","getters","getNavigator","authStatus","actions","commit","Promise","resolve","reject","url","method","then","resp","catch","err","mutations","AUTH_REQUEST","AUTH_SUCCESS","data","AUTH_ERROR"],"mappings":";;;;;AAAA,SACEA,iBADF,EAEEC,eAFF,EAGEC,iBAHF,QAIO,sBAJP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,SAAS,EAAE,KADC;AAEZC,EAAAA,MAAM,EAAE,EAFI;AAGZC,EAAAA,aAAa,EAAE;AAHH,CAAd;AAMA,IAAMC,OAAO,GAAG;AACdC,EAAAA,YAAY,EAAE,sBAAAL,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAV;AAAA,GADL;AAEdK,EAAAA,UAAU,EAAE,oBAAAN,KAAK;AAAA,WAAIA,KAAK,CAACE,MAAV;AAAA;AAFH,CAAhB;;AAKA,IAAMK,OAAO,uBACVX,iBADU,EACU,gBAAgB;AAAA,MAAbY,MAAa,QAAbA,MAAa;AACnC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCH,IAAAA,MAAM,CAACZ,iBAAD,CAAN;AACA,QAAMgB,GAAG,GAAG,oEAAZ;AACAb,IAAAA,KAAK,CAAC;AAAEa,MAAAA,GAAG,EAAEA,GAAP;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAD,CAAL,CACGC,IADH,CACQ,UAAAC,IAAI,EAAI;AACZP,MAAAA,MAAM,CAACV,iBAAD,EAAoBiB,IAApB,CAAN;AACAL,MAAAA,OAAO,CAACK,IAAD,CAAP;AACD,KAJH,EAIKC,KAJL,CAIW,UAAAC,GAAG,EAAI;AACdT,MAAAA,MAAM,CAACX,eAAD,EAAkBoB,GAAlB,CAAN;AACAN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACD,KAPH;AAQD,GAXM,CAAP;AAYD,CAdU,CAAb;;AAiBA,IAAMC,SAAS,iDACZC,YADY,EACG,UAAAnB,KAAK,EAAI;AACvBA,EAAAA,KAAK,CAACE,MAAN,GAAe,SAAf;AACD,CAHY,+BAIZkB,YAJY,EAIG,UAACpB,KAAD,EAAQe,IAAR,EAAiB;AAC/Bf,EAAAA,KAAK,CAACE,MAAN,GAAe,SAAf;AACAF,EAAAA,KAAK,CAACC,SAAN,GAAkBc,IAAI,CAACM,IAAvB;AACArB,EAAAA,KAAK,CAACG,aAAN,GAAsB,IAAtB;AACD,CARY,+BASZmB,UATY,EASC,UAAAtB,KAAK,EAAI;AACrBA,EAAAA,KAAK,CAACE,MAAN,GAAe,OAAf;AACAF,EAAAA,KAAK,CAACG,aAAN,GAAsB,IAAtB;AACD,CAZY,cAAf;AAeA,eAAe;AACbH,EAAAA,KAAK,EAALA,KADa;AAEbI,EAAAA,OAAO,EAAPA,OAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbW,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import {\n  NAVIGATOR_REQUEST,\n  NAVIGATOR_ERROR,\n  NAVIGATOR_SUCCESS\n} from '../actions/navigator'\n\nimport axios from 'axios'\n\nconst state = {\n  navigator: false,\n  status: '',\n  hasLoadedOnce: false\n}\n\nconst getters = {\n  getNavigator: state => state.navigator,\n  authStatus: state => state.status\n}\n\nconst actions = {\n  [NAVIGATOR_REQUEST]: ({ commit }) => {\n    return new Promise((resolve, reject) => {\n      commit(NAVIGATOR_REQUEST)\n      const url = 'https://web.leadertask.com/api/v1/navigator?show_compl_tasks=false'\n      axios({ url: url, method: 'GET' })\n        .then(resp => {\n          commit(NAVIGATOR_SUCCESS, resp)\n          resolve(resp)\n        }).catch(err => {\n          commit(NAVIGATOR_ERROR, err)\n          reject(err)\n        })\n    })\n  }\n}\n\nconst mutations = {\n  [AUTH_REQUEST]: state => {\n    state.status = 'loading'\n  },\n  [AUTH_SUCCESS]: (state, resp) => {\n    state.status = 'success'\n    state.navigator = resp.data\n    state.hasLoadedOnce = true\n  },\n  [AUTH_ERROR]: state => {\n    state.status = 'error'\n    state.hasLoadedOnce = true\n  }\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n}\n"]},"metadata":{},"sourceType":"module"}