{"ast":null,"code":"import { renderSlot as _renderSlot, resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_resolveDynamicComponent($setup.is), {\n    class: _normalizeClass($setup.componentClass),\n    to: $props.to,\n    href: $props.href,\n    \"exact-active-class\": $setup.activeClass\n  }, {\n    default: _withCtx(function () {\n      return [_renderSlot(_ctx.$slots, \"default\")];\n    }),\n    _: 3\n    /* FORWARDED */\n\n  }, 8\n  /* PROPS */\n  , [\"class\", \"to\", \"href\", \"exact-active-class\"]);\n}","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/components/NavBarItem.vue"],"names":[],"mappings":";;uBA6EE,YAAA,CAQY,wBAAA,CAPL,MAAA,CAAA,EAOK,CARZ,EACS;AACN,IAAA,KAAK,EAAA,eAAA,CAAE,MAAA,CAAA,cAAF,CADC;AAEN,IAAA,EAAE,EAAE,MAAA,CAAA,EAFE;AAGN,IAAA,IAAI,EAAE,MAAA,CAAA,IAHA;AAIN,0BAAoB,MAAA,CAAA;AAJd,GADT,E;sBAOE;AAAA,aAAQ,CAAR,WAAA,CAAQ,IAAA,CAAA,MAAR,EAAQ,SAAR,CAAQ,CAAR;AAAA,K;;;;GAPF,E;;AAAA,I,6CAAA,C","sourcesContent":["<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  href: {\n    type: String,\n    default: null\n  },\n  to: {\n    type: String,\n    default: null\n  },\n  type: {\n    type: String,\n    default: 'flex'\n  },\n  activeColor: {\n    type: String,\n    default: 'text-blue-600'\n  },\n  hasDivider: Boolean,\n  isDesktopIconOnly: Boolean,\n  dropdown: Boolean,\n  active: Boolean\n})\n\nconst is = computed(() => {\n  if (props.href) {\n    return 'a'\n  }\n\n  if (props.to) {\n    return 'router-link'\n  }\n\n  return 'div'\n})\n\nconst componentClass = computed(() => {\n  const base = [\n    props.type,\n    'items-center',\n    'grow-0',\n    'shrink-0',\n    'relative',\n    'cursor-pointer',\n    'hover:text-blue-500',\n    props.active ? props.activeColor : 'text-black dark:text-white dark:hover:text-gray-400'\n  ]\n\n  if (props.type === 'block') {\n    base.push('lg:flex')\n  }\n\n  if (!props.dropdown) {\n    base.push('py-2', 'px-3')\n  } else {\n    base.push('p-0', 'lg:py-2', 'lg:px-3')\n  }\n\n  if (props.hasDivider) {\n    base.push('lg:border-r', 'lg:border-gray-100', 'lg:dark:border-gray-800')\n  }\n\n  if (props.isDesktopIconOnly) {\n    base.push('lg:w-16', 'lg:justify-center')\n  }\n\n  return base\n})\n\nconst activeClass = computed(() => {\n  return is.value === 'router-link' ? props.activeColor : null\n})\n</script>\n\n<template>\n  <component\n    :is=\"is\"\n    :class=\"componentClass\"\n    :to=\"to\"\n    :href=\"href\"\n    :exact-active-class=\"activeClass\"\n  >\n    <slot />\n  </component>\n</template>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}