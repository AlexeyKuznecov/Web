{"ast":null,"code":"import _defineProperty from \"/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _actions, _mutations;\n\nimport \"core-js/modules/es.object.to-string.js\";\nimport { AUTH_REQUEST, AUTH_ERROR, AUTH_SUCCESS, AUTH_LOGOUT, AUTH_REGISTER } from '../actions/auth';\nimport { USER_REQUEST } from '../actions/user';\nimport axios from 'axios';\nvar state = {\n  token: localStorage.getItem('user-token') || '',\n  status: '',\n  hasLoadedOnce: false\n};\nvar getters = {\n  isAuthenticated: function isAuthenticated(state) {\n    return !!state.token;\n  },\n  authStatus: function authStatus(state) {\n    return state.status;\n  }\n};\nvar actions = (_actions = {}, _defineProperty(_actions, AUTH_REQUEST, function (_ref, user) {\n  var commit = _ref.commit,\n      dispatch = _ref.dispatch;\n  return new Promise(function (resolve, reject) {\n    commit(AUTH_REQUEST);\n    var url = 'https://web.leadertask.com/api/v1/users/auth?login=' + user.email + '&password=' + user.password;\n    axios({\n      url: url,\n      method: 'POST'\n    }).then(function (resp) {\n      localStorage.setItem(\"user-token\", resp.data.access_token);\n      localStorage.setItem(\"user-refresh-token\", resp.data.refresh_token);\n      axios.defaults.headers.common['Authorization'] = resp.data.access_token;\n      commit(AUTH_SUCCESS, resp);\n      dispatch(USER_REQUEST);\n      resolve(resp);\n    }).catch(function (err) {\n      commit(AUTH_ERROR, err);\n      localStorage.removeItem(\"user-token\");\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, AUTH_REGISTER, function (_ref2, user) {\n  var commit = _ref2.commit;\n  return new Promise(function (resolve, reject) {\n    commit(AUTH_REGISTER);\n    var url = 'https://web.leadertask.com/api/v1/users/new';\n    axios.post(url, user).then(function (resp) {\n      console.log(resp);\n      localStorage.setItem(\"user-token\", resp.data.access_token);\n      localStorage.setItem(\"user-refresh-token\", resp.data.refresh_token);\n      axios.defaults.headers.common['Authorization'] = resp.data.access_token;\n      commit(AUTH_SUCCESS, resp);\n      resolve(resp);\n    }).catch(function (err) {\n      console.log(err.message);\n      commit(AUTH_ERROR, err);\n      localStorage.removeItem(\"user-token\");\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, AUTH_LOGOUT, function (_ref3) {\n  var commit = _ref3.commit;\n  return new Promise(function (resolve, reject) {\n    commit(AUTH_LOGOUT);\n    var url = 'https://web.leadertask.com/api/v1/account/exit';\n    axios.get(url).then(function (resp) {\n      console.log(resp);\n      resolve(resp);\n    }).catch(function (err) {\n      console.log(err.message);\n      commit(AUTH_ERROR, err);\n      localStorage.removeItem(\"user-token\");\n      localStorage.removeItem(\"user-refresh-token\");\n      reject(err);\n    });\n    localStorage.removeItem(\"user-token\");\n    localStorage.removeItem(\"user-refresh-token\");\n    resolve();\n  });\n}), _actions);\nvar mutations = (_mutations = {}, _defineProperty(_mutations, AUTH_REQUEST, function (state) {\n  state.status = \"loading\";\n}), _defineProperty(_mutations, AUTH_REGISTER, function (state) {\n  state.status = \"loading\";\n}), _defineProperty(_mutations, AUTH_SUCCESS, function (state, resp) {\n  state.status = \"success\";\n  state.token = resp.data.access_token;\n  state.hasLoadedOnce = true;\n}), _defineProperty(_mutations, AUTH_ERROR, function (state) {\n  state.status = \"error\";\n  state.hasLoadedOnce = true;\n}), _defineProperty(_mutations, AUTH_LOGOUT, function (state) {\n  state.token = \"\";\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/store/modules/auth.js"],"names":["AUTH_REQUEST","AUTH_ERROR","AUTH_SUCCESS","AUTH_LOGOUT","AUTH_REGISTER","USER_REQUEST","axios","state","token","localStorage","getItem","status","hasLoadedOnce","getters","isAuthenticated","authStatus","actions","user","commit","dispatch","Promise","resolve","reject","url","email","password","method","then","resp","setItem","data","access_token","refresh_token","defaults","headers","common","catch","err","removeItem","post","console","log","message","get","mutations"],"mappings":"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","sourcesContent":["import {\n  AUTH_REQUEST,\n  AUTH_ERROR,\n  AUTH_SUCCESS,\n  AUTH_LOGOUT,\n  AUTH_REGISTER\n} from '../actions/auth'\nimport { USER_REQUEST } from '../actions/user'\nimport axios from 'axios'\n\nconst state = {\n  token: localStorage.getItem('user-token') || '',\n  status: '',\n  hasLoadedOnce: false\n}\n\nconst getters = {\n  isAuthenticated: state => !!state.token,\n  authStatus: state => state.status\n}\n\nconst actions = {\n  [AUTH_REQUEST]: ({ commit, dispatch }, user) => {\n    return new Promise((resolve, reject) => {\n      commit(AUTH_REQUEST);\n      const url = 'https://web.leadertask.com/api/v1/users/auth?login=' + user.email + '&password=' + user.password\n      axios({ url: url, method: 'POST' }) \n      .then(resp => {\n          localStorage.setItem(\"user-token\", resp.data.access_token)\n          localStorage.setItem(\"user-refresh-token\", resp.data.refresh_token)\n          axios.defaults.headers.common['Authorization'] = resp.data.access_token\n          commit(AUTH_SUCCESS, resp)\n          dispatch(USER_REQUEST)\n          resolve(resp) \n        }).catch(err => {\n          commit(AUTH_ERROR, err);\n          localStorage.removeItem(\"user-token\");\n          reject(err);\n        })\n    })\n  },\n  [AUTH_REGISTER]: ({ commit }, user) => {\n    return new Promise((resolve, reject) => {\n      commit(AUTH_REGISTER);\n      const url = 'https://web.leadertask.com/api/v1/users/new'\n      axios.post(url, user) \n      .then(resp => {\n          console.log(resp)\n          localStorage.setItem(\"user-token\", resp.data.access_token);\n          localStorage.setItem(\"user-refresh-token\", resp.data.refresh_token);\n          axios.defaults.headers.common['Authorization'] = resp.data.access_token\n          commit(AUTH_SUCCESS, resp);\n          resolve(resp); })\n        .catch(err => {\n          console.log(err.message)       \n          commit(AUTH_ERROR, err);\n          localStorage.removeItem(\"user-token\");\n          reject(err);\n        });\n    });\n  },\n  [AUTH_LOGOUT]: ({ commit }) => {\n    return new Promise((resolve, reject) => {\n      commit(AUTH_LOGOUT);\n      const url = 'https://web.leadertask.com/api/v1/account/exit'\n      axios.get(url) \n      .then(resp => {\n          console.log(resp)\n          resolve(resp); \n      }) .catch(err => {\n        console.log(err.message)       \n        commit(AUTH_ERROR, err);\n        localStorage.removeItem(\"user-token\");\n        localStorage.removeItem(\"user-refresh-token\");\n        reject(err);\n      });\n      localStorage.removeItem(\"user-token\");\n      localStorage.removeItem(\"user-refresh-token\");\n      resolve();\n    });\n  }\n};\n\nconst mutations = {\n  [AUTH_REQUEST]: state => {\n    state.status = \"loading\";\n  },\n  [AUTH_REGISTER]: state => {\n    state.status = \"loading\";\n  },\n  [AUTH_SUCCESS]: (state, resp) => {\n    state.status = \"success\";\n    state.token = resp.data.access_token;\n    state.hasLoadedOnce = true;\n  },\n  [AUTH_ERROR]: state => {\n    state.status = \"error\";\n    state.hasLoadedOnce = true;\n  },\n  [AUTH_LOGOUT]: state => {\n    state.token = \"\";\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]},"metadata":{},"sourceType":"module"}