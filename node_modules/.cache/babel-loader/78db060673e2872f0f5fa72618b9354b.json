{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _toDisplayString($props.prefix) + _toDisplayString($setup.newValueFormatted) + _toDisplayString($props.suffix), 1\n  /* TEXT */\n  );\n}","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/components/GrowingNumber.vue"],"names":[],"mappings":";;uBA4DE,mBAAA,CAA0D,KAA1D,EAA0D,IAA1D,EAA0D,gBAAA,CAAlD,MAAA,CAAA,MAAkD,CAAA,GAA5C,gBAAA,CAAM,MAAA,CAAA,iBAAN,CAA4C,GAArB,gBAAA,CAAM,MAAA,CAAA,MAAN,CAArC,EAAiD;AAAA;AAAjD,G","sourcesContent":["<script setup>\nimport { computed, ref, watch, onMounted } from 'vue'\nimport numeral from 'numeral'\n\nconst props = defineProps({\n  prefix: {\n    type: String,\n    default: null\n  },\n  suffix: {\n    type: String,\n    default: null\n  },\n  value: {\n    type: Number,\n    default: 0\n  },\n  duration: {\n    type: Number,\n    default: 500\n  }\n})\n\nconst newValue = ref(0)\n\nconst newValueFormatted = computed(\n  () => newValue.value < 1000 ? newValue.value : numeral(newValue.value).format('0,0')\n)\n\nconst value = computed(() => props.value)\n\nconst grow = m => {\n  const v = Math.ceil(newValue.value + m)\n\n  if (v > value.value) {\n    newValue.value = value.value\n    return false\n  }\n\n  newValue.value = v\n\n  setTimeout(() => {\n    grow(m)\n  }, 25)\n}\n\nconst growInit = () => {\n  grow(props.value / (props.duration / 25))\n}\n\nwatch(value, () => {\n  growInit()\n})\n\nonMounted(() => {\n  growInit()\n})\n</script>\n\n<template>\n  <div>{{ prefix }}{{ newValueFormatted }}{{ suffix }}</div>\n</template>s\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}