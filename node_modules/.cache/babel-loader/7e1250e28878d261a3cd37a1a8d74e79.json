{"ast":null,"code":"import { computed, ref, onMounted, onBeforeUnmount } from 'vue';\nimport { mdiChevronUp, mdiChevronDown } from '@mdi/js';\nimport NavBarItem from '@/components/NavBarItem.vue';\nimport Icon from '@/components/Icon.vue';\nexport default {\n  props: {\n    hasDivider: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var isDropdownActive = ref(false);\n    var toggleDropdownIcon = computed(function () {\n      return isDropdownActive.value ? mdiChevronUp : mdiChevronDown;\n    });\n\n    var toggle = function toggle() {\n      isDropdownActive.value = !isDropdownActive.value;\n    };\n\n    var root = ref(null);\n\n    var forceClose = function forceClose(event) {\n      if (!root.value.$el.contains(event.target)) {\n        isDropdownActive.value = false;\n      }\n    };\n\n    onMounted(function () {\n      window.addEventListener('click', forceClose);\n    });\n    onBeforeUnmount(function () {\n      window.removeEventListener('click', forceClose);\n    });\n    var __returned__ = {\n      isDropdownActive: isDropdownActive,\n      toggleDropdownIcon: toggleDropdownIcon,\n      toggle: toggle,\n      root: root,\n      forceClose: forceClose,\n      computed: computed,\n      ref: ref,\n      onMounted: onMounted,\n      onBeforeUnmount: onBeforeUnmount,\n      mdiChevronUp: mdiChevronUp,\n      mdiChevronDown: mdiChevronDown,\n      NavBarItem: NavBarItem,\n      Icon: Icon\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/components/NavBarMenu.vue"],"names":[],"mappings":"AACA,SAAS,QAAT,EAAmB,GAAnB,EAAwB,SAAxB,EAAmC,eAAnC,QAA0D,KAA1D;AACA,SAAS,YAAT,EAAuB,cAAvB,QAA6C,SAA7C;AACA,OAAO,UAAP,MAAuB,6BAAvB;AACA,OAAO,IAAP,MAAiB,uBAAjB;;;;;;;;;;;AASA,QAAM,gBAAgB,GAAG,GAAG,CAAC,KAAD,CAA5B;AAEA,QAAM,kBAAkB,GAAG,QAAQ,CAAC;AAAA,aAAM,gBAAgB,CAAC,KAAjB,GAAyB,YAAzB,GAAwC,cAA9C;AAAA,KAAD,CAAnC;;AAEA,QAAM,MAAM,GAAG,SAAT,MAAS,GAAM;AACnB,MAAA,gBAAgB,CAAC,KAAjB,GAAyB,CAAC,gBAAgB,CAAC,KAA3C;AACD,KAFD;;AAIA,QAAM,IAAI,GAAG,GAAG,CAAC,IAAD,CAAhB;;AAEA,QAAM,UAAU,GAAG,SAAb,UAAa,CAAA,KAAK,EAAI;AAC1B,UAAI,CAAC,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,QAAf,CAAwB,KAAK,CAAC,MAA9B,CAAL,EAA4C;AAC1C,QAAA,gBAAgB,CAAC,KAAjB,GAAyB,KAAzB;AACD;AACF,KAJD;;AAMA,IAAA,SAAS,CAAC,YAAM;AACd,MAAA,MAAM,CAAC,gBAAP,CAAwB,OAAxB,EAAiC,UAAjC;AACD,KAFQ,CAAT;AAIA,IAAA,eAAe,CAAC,YAAM;AACpB,MAAA,MAAM,CAAC,mBAAP,CAA2B,OAA3B,EAAoC,UAApC;AACD,KAFc,CAAf","sourcesContent":["<script setup>\nimport { computed, ref, onMounted, onBeforeUnmount } from 'vue'\nimport { mdiChevronUp, mdiChevronDown } from '@mdi/js'\nimport NavBarItem from '@/components/NavBarItem.vue'\nimport Icon from '@/components/Icon.vue'\n\ndefineProps({\n  hasDivider: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst isDropdownActive = ref(false)\n\nconst toggleDropdownIcon = computed(() => isDropdownActive.value ? mdiChevronUp : mdiChevronDown)\n\nconst toggle = () => {\n  isDropdownActive.value = !isDropdownActive.value\n}\n\nconst root = ref(null)\n\nconst forceClose = event => {\n  if (!root.value.$el.contains(event.target)) {\n    isDropdownActive.value = false\n  }\n}\n\nonMounted(() => {\n  window.addEventListener('click', forceClose)\n})\n\nonBeforeUnmount(() => {\n  window.removeEventListener('click', forceClose)\n})\n</script>\n\n<template>\n  <nav-bar-item\n    ref=\"root\"\n    type=\"block\"\n    :has-divider=\"hasDivider\"\n    :active=\"isDropdownActive\"\n    dropdown\n    class=\"dropdown\"\n    @click=\"toggle\"\n  >\n    <a class=\"flex items-center py-2 px-3 bg-gray-100 dark:bg-gray-800 lg:bg-transparent lg:dark:bg-transparent\">\n      <slot />\n      <icon\n        :path=\"toggleDropdownIcon\"\n        class=\"hidden lg:inline-flex transition-colors\"\n      />\n    </a>\n    <div\n      class=\"text-sm border-gray-100 border-b lg:border-b-0 lg:border-gray-200 lg:border-t lg:bg-white lg:absolute\n          lg:top-full lg:left-0 lg:min-w-full lg:z-20 lg:shadow-md lg:rounded-b lg:dark:bg-gray-800\n          dark:border-gray-700\"\n      :class=\"{'lg:hidden':!isDropdownActive}\"\n    >\n      <slot name=\"dropdown\" />\n    </div>\n  </nav-bar-item>\n</template>\n"]},"metadata":{},"sourceType":"module"}