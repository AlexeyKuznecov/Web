{"ast":null,"code":"import { unref as _unref, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createBlock as _createBlock, vShow as _vShow, normalizeClass as _normalizeClass, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  class: \"flex flex-row w-full bg-gray-900 text-white flex-1 h-14 items-center\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"flex-1 px-3\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"Admin\"), /*#__PURE__*/_createTextVNode(), /*#__PURE__*/_createElementVNode(\"b\", {\n  class: \"font-black\"\n}, \"One\")], -1);\n\nimport { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { mdiMenu } from '@mdi/js';\nimport AsideMenuList from '@/components/AsideMenuList.vue';\nimport NavBarItem from '@/components/NavBarItem.vue';\nimport Icon from '@/components/Icon.vue';\nexport default {\n  props: {\n    menu: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  setup: function setup(__props) {\n    var store = useStore();\n    var isFullScreen = computed(function () {\n      return store.state.isFullScreen;\n    });\n    var isAsideMobileExpanded = computed(function () {\n      return store.state.isAsideMobileExpanded;\n    });\n    var isAsideLgActive = computed(function () {\n      return store.state.isAsideLgActive;\n    });\n\n    var asideLgClose = function asideLgClose() {\n      store.dispatch('asideLgToggle', false);\n    };\n\n    var menuClick = function menuClick(event, item) {//\n    };\n\n    return function (_ctx, _cache) {\n      return _withDirectives((_openBlock(), _createElementBlock(\"aside\", {\n        id: \"aside\",\n        class: _normalizeClass([\"w-60 fixed top-0 z-40 h-screen bg-white transition-position lg:left-0 dark:border-r dark:border-gray-800 dark:bg-gray-900\", [_unref(isAsideMobileExpanded) ? 'left-0' : '-left-60', _unref(isAsideLgActive) ? 'block' : 'lg:hidden xl:block']])\n      }, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(NavBarItem, {\n        type: \"hidden lg:flex xl:hidden\",\n        \"active-color\": \"text-white\",\n        active: \"\",\n        onClick: asideLgClose\n      }, {\n        default: _withCtx(function () {\n          return [_createVNode(Icon, {\n            path: _unref(mdiMenu),\n            class: \"cursor-pointer\",\n            size: \"24\"\n          }, null, 8, [\"path\"])];\n        }),\n        _: 1\n      }), _hoisted_2]), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.menu, function (menuGroup, index) {\n        return _openBlock(), _createElementBlock(_Fragment, null, [typeof menuGroup === 'string' ? (_openBlock(), _createElementBlock(\"p\", {\n          key: \"a-\".concat(index),\n          class: \"p-3 text-xs uppercase text-gray-400\"\n        }, _toDisplayString(menuGroup), 1)) : (_openBlock(), _createBlock(AsideMenuList, {\n          key: \"b-\".concat(index),\n          menu: menuGroup,\n          onMenuClick: menuClick\n        }, null, 8, [\"menu\"]))], 64);\n      }), 256))])], 2)), [[_vShow, !_unref(isFullScreen)]]);\n    };\n  }\n};","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/components/AsideMenu.vue"],"names":[],"mappings":";;;;;;;;;;;AACA,SAAS,QAAT,QAAyB,KAAzB;AACA,SAAS,QAAT,QAAyB,MAAzB;AACA,SAAS,OAAT,QAAwB,SAAxB;AACA,OAAO,aAAP,MAA0B,gCAA1B;AACA,OAAO,UAAP,MAAuB,6BAAvB;AACA,OAAO,IAAP,MAAiB,uBAAjB;;;;;;;;;;;AASA,QAAM,KAAK,GAAG,QAAQ,EAAtB;AACA,QAAM,YAAY,GAAG,QAAQ,CAAC;AAAA,aAAM,KAAK,CAAC,KAAN,CAAY,YAAlB;AAAA,KAAD,CAA7B;AACA,QAAM,qBAAqB,GAAG,QAAQ,CAAC;AAAA,aAAM,KAAK,CAAC,KAAN,CAAY,qBAAlB;AAAA,KAAD,CAAtC;AACA,QAAM,eAAe,GAAG,QAAQ,CAAC;AAAA,aAAM,KAAK,CAAC,KAAN,CAAY,eAAlB;AAAA,KAAD,CAAhC;;AAEA,QAAM,YAAY,GAAG,SAAf,YAAe,GAAM;AACzB,MAAA,KAAK,CAAC,QAAN,CAAe,eAAf,EAAgC,KAAhC;AACD,KAFD;;AAIA,QAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,KAAD,EAAQ,IAAR,EAAiB,CACjC;AACD,KAFD","sourcesContent":["<script setup>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { mdiMenu } from '@mdi/js'\nimport AsideMenuList from '@/components/AsideMenuList.vue'\nimport NavBarItem from '@/components/NavBarItem.vue'\nimport Icon from '@/components/Icon.vue'\n\ndefineProps({\n  menu: {\n    type: Array,\n    default: () => []\n  }\n})\n\nconst store = useStore()\nconst isFullScreen = computed(() => store.state.isFullScreen)\nconst isAsideMobileExpanded = computed(() => store.state.isAsideMobileExpanded)\nconst isAsideLgActive = computed(() => store.state.isAsideLgActive)\n\nconst asideLgClose = () => {\n  store.dispatch('asideLgToggle', false)\n}\n\nconst menuClick = (event, item) => {\n  //\n}\n</script>\n\n<template>\n  <aside\n    v-show=\"!isFullScreen\"\n    id=\"aside\"\n    class=\"w-60 fixed top-0 z-40 h-screen bg-white transition-position lg:left-0 dark:border-r dark:border-gray-800 dark:bg-gray-900\"\n    :class=\"[ isAsideMobileExpanded ? 'left-0' : '-left-60', isAsideLgActive ? 'block' : 'lg:hidden xl:block' ]\"\n  >\n    <div class=\"flex flex-row w-full bg-gray-900 text-white flex-1 h-14 items-center\">\n      <nav-bar-item\n        type=\"hidden lg:flex xl:hidden\"\n        active-color=\"text-white\"\n        active\n        @click=\"asideLgClose\"\n      >\n        <icon\n          :path=\"mdiMenu\"\n          class=\"cursor-pointer\"\n          size=\"24\"\n        />\n      </nav-bar-item>\n      <div class=\"flex-1 px-3\">\n        <span>Admin</span> <b class=\"font-black\">One</b>\n      </div>\n    </div>\n    <div>\n      <template v-for=\"(menuGroup, index) in menu\">\n        <p\n          v-if=\"typeof menuGroup === 'string'\"\n          :key=\"`a-${index}`\"\n          class=\"p-3 text-xs uppercase text-gray-400\"\n        >\n          {{ menuGroup }}\n        </p>\n        <aside-menu-list\n          v-else\n          :key=\"`b-${index}`\"\n          :menu=\"menuGroup\"\n          @menu-click=\"menuClick\"\n        />\n      </template>\n    </div>\n  </aside>\n</template>\n"]},"metadata":{},"sourceType":"module"}