{"ast":null,"code":"import { createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, TransitionGroup as _TransitionGroup, withModifiers as _withModifiers, normalizeClass as _normalizeClass, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  key: 0\n};\nvar _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"FullScreenSection\"], {\n    bg: \"login\"\n  }, {\n    default: _withCtx(function (_ref) {\n      var cardClass = _ref.cardClass,\n          cardRounded = _ref.cardRounded;\n      return [_createVNode($setup[\"CardComponent\"], {\n        class: _normalizeClass(cardClass),\n        rounded: cardRounded,\n        form: \"\",\n        onSubmit: _withModifiers($setup.submit, [\"prevent\"])\n      }, {\n        default: _withCtx(function () {\n          return [_createVNode($setup[\"Field\"], {\n            label: \"Email\",\n            help: \"Please enter your email\"\n          }, {\n            default: _withCtx(function () {\n              return [_createVNode($setup[\"Control\"], {\n                modelValue: $setup.form.email,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.form.email = $event;\n                }),\n                onBlur: $setup.checkEmailExistense,\n                icon: $setup.mdiAccount,\n                name: \"email\",\n                autocomplete: \"email\",\n                required: \"\"\n              }, null, 8\n              /* PROPS */\n              , [\"modelValue\", \"icon\"])];\n            }),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_TransitionGroup, {\n            name: \"slide-fade\"\n          }, {\n            default: _withCtx(function () {\n              return [$setup.showValues.showLoginInputsValue ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"Field\"], {\n                label: \"Password\",\n                help: \"Please enter your password\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode($setup[\"Control\"], {\n                    modelValue: $setup.form.pass,\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                      return $setup.form.pass = $event;\n                    }),\n                    icon: $setup.mdiAsterisk,\n                    type: \"password\",\n                    name: \"password\",\n                    autocomplete: \"current-password\"\n                  }, null, 8\n                  /* PROPS */\n                  , [\"modelValue\", \"icon\"])];\n                }),\n                _: 1\n                /* STABLE */\n\n              })])) : _createCommentVNode(\"v-if\", true)];\n            }),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_TransitionGroup, {\n            name: \"slide-fade\"\n          }, {\n            default: _withCtx(function () {\n              return [$setup.showValues.showRegisterInputsValue ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode($setup[\"Field\"], {\n                label: \"Password\",\n                help: \"Please enter your password\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode($setup[\"Control\"], {\n                    modelValue: $setup.form.pass,\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                      return $setup.form.pass = $event;\n                    }),\n                    icon: $setup.mdiAsterisk,\n                    type: \"password\",\n                    name: \"password\",\n                    autocomplete: \"current-password\"\n                  }, null, 8\n                  /* PROPS */\n                  , [\"modelValue\", \"icon\"])];\n                }),\n                _: 1\n                /* STABLE */\n\n              }), _createVNode($setup[\"Field\"], {\n                label: \"Username\",\n                help: \"Plase enter your username\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode($setup[\"Control\"], {\n                    modelValue: $setup.form.username,\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                      return $setup.form.username = $event;\n                    }),\n                    type: \"text\",\n                    name: \"username\",\n                    autocomplete: \"username\"\n                  }, null, 8\n                  /* PROPS */\n                  , [\"modelValue\"])];\n                }),\n                _: 1\n                /* STABLE */\n\n              })])) : _createCommentVNode(\"v-if\", true)];\n            }),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode($setup[\"Divider\"]), _createVNode($setup[\"JbButtons\"], null, {\n            default: _withCtx(function () {\n              return [_createVNode($setup[\"JbButton\"], {\n                type: \"submit\",\n                color: \"info\",\n                label: \"Submit\"\n              })];\n            }),\n            _: 1\n            /* STABLE */\n\n          })];\n        }),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"class\", \"rounded\", \"onSubmit\"])];\n    }),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/views/Login.vue"],"names":[],"mappings":"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","sourcesContent":["<script setup>\nimport { reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\nimport { mdiAccount, mdiAsterisk } from '@mdi/js'\nimport FullScreenSection from '@/components/FullScreenSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\n\nimport { AUTH_REQUEST, AUTH_REGISTER } from '@/store/actions/auth'\n\nconst form = reactive({\n  email: '',\n  password: '',\n  username: ''\n})\n\nconst showValues = reactive({\n  showRegisterInputsValue: false,\n  showLoginInputsValue: false\n})\n\nconst router = useRouter()\n\nconst submit = () => {\n  if (showValues.showRegisterInputsValue) {\n    login()\n  } else {\n    register()\n  }\n}\n\nconst login = () => {\n  const data = { email: form.email, password: form.password }\n  this.$store.dispatch(AUTH_REQUEST, data)\n    .then(() => {\n      router.push('/')\n    })\n    .catch((err) => console.log(err.message))\n}\n\nconst register = () => {\n  if (!form.password || !form.username) { return }\n  const data = {\n    email: form.email,\n    password: form.password,\n    name: form.username,\n    system: 'web',\n    language: 'russian'\n  }\n  this.$store.dispatch(AUTH_REGISTER, data)\n    .then(() => {\n      this.$router.push('/')\n    })\n    .catch((err) => console.log(err.message))\n}\n\nconst hideLoginInputs = () => {\n  showValues.showLoginInputsValue = false\n}\n\nconst showLoginInputs = () => {\n  showValues.showLoginInputsValue = true\n  hideRegisterInputs()\n}\n\nconst hideRegisterInputs = () => {\n  showValues.showRegisterInputsValue = false\n}\n\nconst showRegisterInputs = () => {\n  showValues.showRegisterInputsValue = true\n  hideLoginInputs()\n}\n\nconst checkEmailExistense = () => {\n  if (form.email) {\n    const uri = 'https://web.leadertask.com/api/v1/users/exists?email=' + form.email\n    axios.get(uri)\n      .then(() => {\n        showLoginInputs()\n        console.log('show login inputs')\n      })\n      .catch(() => {\n        showRegisterInputs()\n        console.log('show register inputs')\n      })\n  }\n}\n\n</script>\n<template>\n  <full-screen-section\n    v-slot=\"{ cardClass, cardRounded }\"\n    bg=\"login\"\n  >\n    <card-component\n      :class=\"cardClass\"\n      :rounded=\"cardRounded\"\n      form\n      @submit.prevent=\"submit\"\n    >\n      <field\n        label=\"Email\"\n        help=\"Please enter your email\"\n      >\n        <control\n          v-model=\"form.email\"\n          @blur=\"checkEmailExistense\"\n          :icon=\"mdiAccount\"\n          name=\"email\"\n          autocomplete=\"email\"\n          required\n        />\n      </field>\n\n  <transition-group name=\"slide-fade\">\n    <div v-if=\"showValues.showLoginInputsValue\">\n      <field\n        label=\"Password\"\n        help=\"Please enter your password\"\n      >\n        <control\n          v-model=\"form.pass\"\n          :icon=\"mdiAsterisk\"\n          type=\"password\"\n          name=\"password\"\n          autocomplete=\"current-password\"\n        />\n      </field>\n    </div>\n  </transition-group>\n\n  <transition-group name=\"slide-fade\">\n    <div v-if=\"showValues.showRegisterInputsValue\">\n      <field\n        label=\"Password\"\n        help=\"Please enter your password\"\n      >\n        <control\n          v-model=\"form.pass\"\n          :icon=\"mdiAsterisk\"\n          type=\"password\"\n          name=\"password\"\n          autocomplete=\"current-password\"\n        />\n      </field>\n\n      <field\n        label=\"Username\"\n        help=\"Plase enter your username\"\n      >\n        <control\n          v-model=\"form.username\"\n          type=\"text\"\n          name=\"username\"\n          autocomplete=\"username\"\n        />\n      </field>\n    </div>\n  </transition-group>\n\n      <divider />\n\n      <jb-buttons>\n        <jb-button\n          type=\"submit\"\n          color=\"info\"\n          label=\"Submit\"\n        />\n      </jb-buttons>\n    </card-component>\n  </full-screen-section>\n</template>\n\n<style>\n\n.error-message {\n  color: #8D021F;\n  font-size: 14px;\n}\n\n.slide-fade-enter-active {\n  transition: all 0.3s ease-out;\n}\n\n.slide-fade-leave-active {\n  transition: all 0.3s cubic-bezier(1, 0.5, 0.8, 1);\n}\n\n.slide-fade-enter-from,\n.slide-fade-leave-to {\n  transform: translateX(75px);\n  opacity: 0;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}