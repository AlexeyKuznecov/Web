{"ast":null,"code":"import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"bg-white border-t border-b border-gray-100 p-6 dark:bg-gray-900 dark:border-gray-900 dark:text-white\"\n};\nvar _hoisted_2 = {\n  class: \"text-3xl font-semibold leading-tight\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createVNode($setup[\"Level\"], null, {\n    default: _withCtx(function () {\n      return [_createElementVNode(\"h1\", _hoisted_2, [_renderSlot(_ctx.$slots, \"default\")]), _createVNode($setup[\"JbButton\"], {\n        label: $setup.darkMode ? 'Light Mode' : 'Dark Mode',\n        icon: $setup.mdiThemeLightDark,\n        outline: $setup.darkMode,\n        onClick: $setup.darkModeToggle\n      }, null, 8\n      /* PROPS */\n      , [\"label\", \"icon\", \"outline\"])];\n    }),\n    _: 3\n    /* FORWARDED */\n\n  })]);\n}","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/components/HeroBar.vue"],"names":[],"mappings":";;AAiBW,EAAA,KAAK,EAAC;;;AAEP,EAAA,KAAK,EAAC;;;uBAFd,mBAAA,CAYU,SAZV,EAAA,UAAA,EAYU,CAXR,YAAA,CAUQ,MAAA,CAAA,OAAA,CAVR,EAUQ,IAVR,EAUQ;sBATN;AAAA,aAEK,CAFL,mBAAA,CAEK,IAFL,EAAA,UAAA,EAEK,CADH,WAAA,CAAQ,IAAA,CAAA,MAAR,EAAQ,SAAR,CACG,CAFL,CAEK,EACL,YAAA,CAKE,MAAA,CAAA,UAAA,CALF,EAKE;AAJC,QAAA,KAAK,EAAE,MAAA,CAAA,QAAA,GAAQ,YAAR,GAAQ,WAIhB;AAHC,QAAA,IAAI,EAAE,MAAA,CAAA,iBAGP;AAFC,QAAA,OAAO,EAAE,MAAA,CAAA,QAEV;AADC,QAAA,OAAK,EAAE,MAAA,CAAA;AACR,OALF,E,IAAA,E;;AAAA,Q,4BAAA,CADK,CAFL;AAAA,K,CASM;;;;AAAA,GAVR,CAWQ,CAZV,C","sourcesContent":["<script setup>\nimport { mdiThemeLightDark } from '@mdi/js'\nimport { useStore } from 'vuex'\nimport { computed } from 'vue'\nimport Level from '@/components/Level.vue'\nimport JbButton from '@/components/JbButton.vue'\n\nconst store = useStore()\n\nconst darkMode = computed(() => store.state.darkMode)\n\nconst darkModeToggle = () => {\n  store.dispatch('darkMode')\n}\n</script>\n\n<template>\n  <section class=\"bg-white border-t border-b border-gray-100 p-6 dark:bg-gray-900 dark:border-gray-900 dark:text-white\">\n    <level>\n      <h1 class=\"text-3xl font-semibold leading-tight\">\n        <slot />\n      </h1>\n      <jb-button\n        :label=\"darkMode ? 'Light Mode' : 'Dark Mode'\"\n        :icon=\"mdiThemeLightDark\"\n        :outline=\"darkMode\"\n        @click=\"darkModeToggle\"\n      />\n    </level>\n  </section>\n</template>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}