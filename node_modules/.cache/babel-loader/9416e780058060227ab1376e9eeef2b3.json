{"ast":null,"code":"import { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { VCalendar } from 'v-calendar';\nimport { mdiMenu } from '@mdi/js';\nimport AsideMenuList from '@/components/AsideMenuList.vue';\nimport NavBarItem from '@/components/NavBarItem.vue';\nimport Icon from '@/components/Icon.vue';\nexport default {\n  props: {\n    menu: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var store = useStore();\n    var isFullScreen = computed(function () {\n      return store.state.isFullScreen;\n    });\n    var isAsideMobileExpanded = computed(function () {\n      return store.state.isAsideMobileExpanded;\n    });\n    var isAsideLgActive = computed(function () {\n      return store.state.isAsideLgActive;\n    });\n\n    var asideLgClose = function asideLgClose() {\n      store.dispatch('asideLgToggle', false);\n    };\n\n    var menuClick = function menuClick(event, item) {//\n    };\n\n    var __returned__ = {\n      store: store,\n      isFullScreen: isFullScreen,\n      isAsideMobileExpanded: isAsideMobileExpanded,\n      isAsideLgActive: isAsideLgActive,\n      asideLgClose: asideLgClose,\n      menuClick: menuClick,\n      computed: computed,\n      useStore: useStore,\n      VCalendar: VCalendar,\n      mdiMenu: mdiMenu,\n      AsideMenuList: AsideMenuList,\n      NavBarItem: NavBarItem,\n      Icon: Icon\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/components/AsideMenu.vue"],"names":[],"mappings":"AACA,SAAS,QAAT,QAAyB,KAAzB;AACA,SAAS,QAAT,QAAyB,MAAzB;AACA,SAAS,SAAT,QAA0B,YAA1B;AACA,SAAS,OAAT,QAAwB,SAAxB;AACA,OAAO,aAAP,MAA0B,gCAA1B;AACA,OAAO,UAAP,MAAuB,6BAAvB;AACA,OAAO,IAAP,MAAiB,uBAAjB;;;;;;;;;;;;;AASA,QAAM,KAAK,GAAG,QAAQ,EAAtB;AACA,QAAM,YAAY,GAAG,QAAQ,CAAC;AAAA,aAAM,KAAK,CAAC,KAAN,CAAY,YAAlB;AAAA,KAAD,CAA7B;AACA,QAAM,qBAAqB,GAAG,QAAQ,CAAC;AAAA,aAAM,KAAK,CAAC,KAAN,CAAY,qBAAlB;AAAA,KAAD,CAAtC;AACA,QAAM,eAAe,GAAG,QAAQ,CAAC;AAAA,aAAM,KAAK,CAAC,KAAN,CAAY,eAAlB;AAAA,KAAD,CAAhC;;AAEA,QAAM,YAAY,GAAG,SAAf,YAAe,GAAM;AACzB,MAAA,KAAK,CAAC,QAAN,CAAe,eAAf,EAAgC,KAAhC;AACD,KAFD;;AAIA,QAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,KAAD,EAAQ,IAAR,EAAiB,CACjC;AACD,KAFD","sourcesContent":["<script setup>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { VCalendar } from 'v-calendar';\nimport { mdiMenu } from '@mdi/js'\nimport AsideMenuList from '@/components/AsideMenuList.vue'\nimport NavBarItem from '@/components/NavBarItem.vue'\nimport Icon from '@/components/Icon.vue'\n\ndefineProps({\n  menu: {\n    type: Array,\n    default: () => []\n  }\n})\n\nconst store = useStore()\nconst isFullScreen = computed(() => store.state.isFullScreen)\nconst isAsideMobileExpanded = computed(() => store.state.isAsideMobileExpanded)\nconst isAsideLgActive = computed(() => store.state.isAsideLgActive)\n\nconst asideLgClose = () => {\n  store.dispatch('asideLgToggle', false)\n}\n\nconst menuClick = (event, item) => {\n  //\n}\n</script>\n\n<template>\n  <aside\n    v-show=\"!isFullScreen\"\n    id=\"aside\"\n    class=\"w-80 fixed top-0 z-40 h-screen bg-white transition-position lg:left-0 dark:border-r dark:border-gray-800 dark:bg-gray-900\"\n    :class=\"[ isAsideMobileExpanded ? 'left-0' : '-left-80', isAsideLgActive ? 'block' : 'lg:hidden xl:block' ]\"\n  >\n    <div class=\"flex flex-row w-full text-dark flex-1 h-14 items-center\">\n      <nav-bar-item\n        type=\"hidden lg:flex xl:hidden\"\n        active-color=\"text-white\"\n        active\n        @click=\"asideLgClose\"\n      >\n        <icon\n          :path=\"mdiMenu\"\n          class=\"cursor-pointer\"\n          size=\"24\"\n        />\n      </nav-bar-item>\n      <div class=\"flex-1 px-3\">\n        <span>Admin</span> <b class=\"font-black\">One</b>\n      </div>\n    </div>\n    <div>\n      <template v-for=\"(menuGroup, index) in menu\">\n        <p\n          v-if=\"typeof menuGroup === 'string'\"\n          :key=\"`a-${index}`\"\n          class=\"p-3 text-xs uppercase text-gray-400\"\n        >\n          {{ menuGroup }}\n        </p>\n        <aside-menu-list\n          v-else\n          :key=\"`b-${index}`\"\n          :menu=\"menuGroup\"\n          @menu-click=\"menuClick\"\n        />\n      </template>\n    </div>\n  </aside>\n</template>\n"]},"metadata":{},"sourceType":"module"}