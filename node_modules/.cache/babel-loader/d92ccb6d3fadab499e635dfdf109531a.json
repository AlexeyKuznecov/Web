{"ast":null,"code":"import { renderSlot as _renderSlot, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"flex items-center py-2 px-3 bg-gray-100 dark:bg-gray-800 lg:bg-transparent lg:dark:bg-transparent\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"NavBarItem\"], {\n    ref: \"root\",\n    type: \"block\",\n    \"has-divider\": $props.hasDivider,\n    active: $setup.isDropdownActive,\n    dropdown: \"\",\n    class: \"dropdown\",\n    onClick: $setup.toggle\n  }, {\n    default: _withCtx(function () {\n      return [_createElementVNode(\"a\", _hoisted_1, [_renderSlot(_ctx.$slots, \"default\"), _createVNode($setup[\"Icon\"], {\n        path: $setup.toggleDropdownIcon,\n        class: \"hidden lg:inline-flex transition-colors\"\n      }, null, 8\n      /* PROPS */\n      , [\"path\"])]), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"text-sm border-gray-100 border-b lg:border-b-0 lg:border-gray-200 lg:border-t lg:bg-white lg:absolute lg:top-full lg:left-0 lg:min-w-full lg:z-20 lg:shadow-md lg:rounded-b lg:dark:bg-gray-800 dark:border-gray-700\", {\n          'lg:hidden': !$setup.isDropdownActive\n        }])\n      }, [_renderSlot(_ctx.$slots, \"dropdown\")], 2\n      /* CLASS */\n      )];\n    }),\n    _: 3\n    /* FORWARDED */\n\n  }, 8\n  /* PROPS */\n  , [\"has-divider\", \"active\"]);\n}","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/components/NavBarMenu.vue"],"names":[],"mappings":";;AAgDO,EAAA,KAAK,EAAC;;;uBATX,YAAA,CAwBe,MAAA,CAAA,YAAA,CAxBf,EAwBe;AAvBb,IAAA,GAAG,EAAC,MAuBS;AAtBb,IAAA,IAAI,EAAC,OAsBQ;AArBZ,mBAAa,MAAA,CAAA,UAqBD;AApBZ,IAAA,MAAM,EAAE,MAAA,CAAA,gBAoBI;AAnBb,IAAA,QAAQ,EAAR,EAmBa;AAlBb,IAAA,KAAK,EAAC,UAkBO;AAjBZ,IAAA,OAAK,EAAE,MAAA,CAAA;AAiBK,GAxBf,E;sBASE;AAAA,aAMI,CANJ,mBAAA,CAMI,GANJ,EAAA,UAAA,EAMI,CALF,WAAA,CAAQ,IAAA,CAAA,MAAR,EAAQ,SAAR,CAKE,EAJF,YAAA,CAGE,MAAA,CAAA,MAAA,CAHF,EAGE;AAFC,QAAA,IAAI,EAAE,MAAA,CAAA,kBAEP;AADA,QAAA,KAAK,EAAC;AACN,OAHF,E,IAAA,E;;AAAA,Q,QAAA,CAIE,CANJ,CAMI,EACJ,mBAAA,CAOM,KAPN,EAOM;AANJ,QAAA,KAAK,EAAA,eAAA,CAAA,CAAC,sNAAD,EAEoB;AAAA,uBAAA,CACH,MAAA,CAAA;AADG,SAFpB,CAAA;AAMD,OAPN,E,CAME,WAAA,CAAwB,IAAA,CAAA,MAAxB,EAAwB,UAAxB,C,CANF,E;;AAAA,OADI,CANJ;AAAA,K;;;;GATF,E;;AAAA,I,yBAAA,C","sourcesContent":["<script setup>\nimport { computed, ref, onMounted, onBeforeUnmount } from 'vue'\nimport { mdiChevronUp, mdiChevronDown } from '@mdi/js'\nimport NavBarItem from '@/components/NavBarItem.vue'\nimport Icon from '@/components/Icon.vue'\n\ndefineProps({\n  hasDivider: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst isDropdownActive = ref(false)\n\nconst toggleDropdownIcon = computed(() => isDropdownActive.value ? mdiChevronUp : mdiChevronDown)\n\nconst toggle = () => {\n  isDropdownActive.value = !isDropdownActive.value\n}\n\nconst root = ref(null)\n\nconst forceClose = event => {\n  if (!root.value.$el.contains(event.target)) {\n    isDropdownActive.value = false\n  }\n}\n\nonMounted(() => {\n  window.addEventListener('click', forceClose)\n})\n\nonBeforeUnmount(() => {\n  window.removeEventListener('click', forceClose)\n})\n</script>\n\n<template>\n  <nav-bar-item\n    ref=\"root\"\n    type=\"block\"\n    :has-divider=\"hasDivider\"\n    :active=\"isDropdownActive\"\n    dropdown\n    class=\"dropdown\"\n    @click=\"toggle\"\n  >\n    <a class=\"flex items-center py-2 px-3 bg-gray-100 dark:bg-gray-800 lg:bg-transparent lg:dark:bg-transparent\">\n      <slot />\n      <icon\n        :path=\"toggleDropdownIcon\"\n        class=\"hidden lg:inline-flex transition-colors\"\n      />\n    </a>\n    <div\n      class=\"text-sm border-gray-100 border-b lg:border-b-0 lg:border-gray-200 lg:border-t lg:bg-white lg:absolute\n          lg:top-full lg:left-0 lg:min-w-full lg:z-20 lg:shadow-md lg:rounded-b lg:dark:bg-gray-800\n          dark:border-gray-700\"\n      :class=\"{'lg:hidden':!isDropdownActive}\"\n    >\n      <slot name=\"dropdown\" />\n    </div>\n  </nav-bar-item>\n</template>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}