{"ast":null,"code":"import { unref as _unref, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, TransitionGroup as _TransitionGroup, withModifiers as _withModifiers, normalizeClass as _normalizeClass, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  key: 0\n};\nvar _hoisted_2 = {\n  key: 0\n};\nimport { reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nimport store from '@/store';\nimport { mdiAccount, mdiAsterisk } from '@mdi/js';\nimport FullScreenSection from '@/components/FullScreenSection.vue';\nimport CardComponent from '@/components/CardComponent.vue';\nimport Field from '@/components/Field.vue';\nimport Control from '@/components/Control.vue';\nimport Divider from '@/components/Divider.vue';\nimport JbButton from '@/components/JbButton.vue';\nimport JbButtons from '@/components/JbButtons.vue';\nimport { AUTH_REQUEST, AUTH_REGISTER } from '@/store/actions/auth';\nexport default {\n  setup: function setup(__props) {\n    var form = reactive({\n      email: '',\n      password: '',\n      username: ''\n    });\n    var showValues = reactive({\n      showRegisterInputsValue: false,\n      showLoginInputsValue: false\n    });\n    var router = useRouter();\n\n    var submit = function submit() {\n      if (showValues.showLoginInputsValue) {\n        login();\n      } else if (showValues.showRegisterInputsValue) {\n        register();\n      }\n    };\n\n    var login = function login() {\n      var data = {\n        email: form.email,\n        password: form.password\n      };\n      store.dispatch(AUTH_REQUEST, data).then(function () {\n        router.push('/');\n      }).catch(function (err) {\n        return console.log(err.message);\n      });\n    };\n\n    var register = function register() {\n      if (!form.password || !form.username) {\n        return;\n      }\n\n      var data = {\n        email: form.email,\n        password: form.password,\n        name: form.username,\n        system: 'web',\n        language: 'russian'\n      };\n      store.dispatch(AUTH_REGISTER, data).then(function () {\n        router.push('/');\n      }).catch(function (err) {\n        return console.log(err.message);\n      });\n    };\n\n    var hideLoginInputs = function hideLoginInputs() {\n      showValues.showLoginInputsValue = false;\n    };\n\n    var showLoginInputs = function showLoginInputs() {\n      showValues.showLoginInputsValue = true;\n      hideRegisterInputs();\n    };\n\n    var hideRegisterInputs = function hideRegisterInputs() {\n      showValues.showRegisterInputsValue = false;\n    };\n\n    var showRegisterInputs = function showRegisterInputs() {\n      showValues.showRegisterInputsValue = true;\n      hideLoginInputs();\n    };\n\n    var checkEmailExistense = function checkEmailExistense() {\n      if (form.email) {\n        var uri = 'https://web.leadertask.com/api/v1/users/exists?email=' + form.email;\n        axios.get(uri).then(function () {\n          showLoginInputs();\n        }).catch(function () {\n          showRegisterInputs();\n        });\n      }\n    };\n\n    return function (_ctx, _cache) {\n      return _openBlock(), _createBlock(FullScreenSection, {\n        bg: \"login\"\n      }, {\n        default: _withCtx(function (_ref) {\n          var cardClass = _ref.cardClass,\n              cardRounded = _ref.cardRounded;\n          return [_createVNode(CardComponent, {\n            class: _normalizeClass(cardClass),\n            rounded: cardRounded,\n            form: \"\",\n            onSubmit: _withModifiers(submit, [\"prevent\"])\n          }, {\n            default: _withCtx(function () {\n              return [_createVNode(Field, {\n                label: \"Email\",\n                help: \"Please enter your email\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode(Control, {\n                    modelValue: _unref(form).email,\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                      return _unref(form).email = $event;\n                    }),\n                    onBlur: checkEmailExistense,\n                    icon: _unref(mdiAccount),\n                    name: \"email\",\n                    autocomplete: \"email\",\n                    required: \"\"\n                  }, null, 8, [\"modelValue\", \"icon\"])];\n                }),\n                _: 1\n              }), _createVNode(_TransitionGroup, {\n                name: \"slide-fade\"\n              }, {\n                default: _withCtx(function () {\n                  return [_unref(showValues).showLoginInputsValue ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(Field, {\n                    label: \"Password\",\n                    help: \"Please enter your password\"\n                  }, {\n                    default: _withCtx(function () {\n                      return [_createVNode(Control, {\n                        modelValue: _unref(form).password,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                          return _unref(form).password = $event;\n                        }),\n                        icon: _unref(mdiAsterisk),\n                        type: \"password\",\n                        name: \"password\",\n                        autocomplete: \"current-password\"\n                      }, null, 8, [\"modelValue\", \"icon\"])];\n                    }),\n                    _: 1\n                  })])) : _createCommentVNode(\"\", true)];\n                }),\n                _: 1\n              }), _createVNode(_TransitionGroup, {\n                name: \"slide-fade\"\n              }, {\n                default: _withCtx(function () {\n                  return [_unref(showValues).showRegisterInputsValue ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(Field, {\n                    label: \"Password\",\n                    help: \"Please enter your password\"\n                  }, {\n                    default: _withCtx(function () {\n                      return [_createVNode(Control, {\n                        modelValue: _unref(form).password,\n                        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                          return _unref(form).password = $event;\n                        }),\n                        icon: _unref(mdiAsterisk),\n                        type: \"password\",\n                        name: \"password\",\n                        autocomplete: \"current-password\"\n                      }, null, 8, [\"modelValue\", \"icon\"])];\n                    }),\n                    _: 1\n                  }), _createVNode(Field, {\n                    label: \"Username\",\n                    help: \"Plase enter your username\"\n                  }, {\n                    default: _withCtx(function () {\n                      return [_createVNode(Control, {\n                        modelValue: _unref(form).username,\n                        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                          return _unref(form).username = $event;\n                        }),\n                        type: \"text\",\n                        name: \"username\",\n                        autocomplete: \"username\"\n                      }, null, 8, [\"modelValue\"])];\n                    }),\n                    _: 1\n                  })])) : _createCommentVNode(\"\", true)];\n                }),\n                _: 1\n              }), _createVNode(Divider), _createVNode(JbButtons, null, {\n                default: _withCtx(function () {\n                  return [_createVNode(JbButton, {\n                    type: \"submit\",\n                    color: \"info\",\n                    label: \"Submit\"\n                  })];\n                }),\n                _: 1\n              })];\n            }),\n            _: 2\n          }, 1032, [\"class\", \"rounded\", \"onSubmit\"])];\n        }),\n        _: 1\n      });\n    };\n  }\n};","map":{"version":3,"sources":["/Users/dmitrygashilov/Projects/admin-one-vue-tailwind/src/views/Login.vue"],"names":[],"mappings":"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","sourcesContent":["<script setup>\nimport { reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\nimport store from '@/store'\nimport { mdiAccount, mdiAsterisk } from '@mdi/js'\nimport FullScreenSection from '@/components/FullScreenSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\n\nimport { AUTH_REQUEST, AUTH_REGISTER } from '@/store/actions/auth'\n\nconst form = reactive({\n  email: '',\n  password: '',\n  username: ''\n})\n\nconst showValues = reactive({\n  showRegisterInputsValue: false,\n  showLoginInputsValue: false\n})\n\nconst router = useRouter()\n\nconst submit = () => {\n  if (showValues.showLoginInputsValue) {\n    login()\n  } else if (showValues.showRegisterInputsValue) {\n    register()\n  }\n}\n\nconst login = () => {\n  const data = { email: form.email, password: form.password }\n  store.dispatch(AUTH_REQUEST, data)\n    .then(() => {\n      router.push('/')\n    })\n    .catch((err) => console.log(err.message))\n}\n\nconst register = () => {\n  if (!form.password || !form.username) { return }\n  const data = {\n    email: form.email,\n    password: form.password,\n    name: form.username,\n    system: 'web',\n    language: 'russian'\n  }\n  store.dispatch(AUTH_REGISTER, data)\n    .then(() => {\n      router.push('/')\n    })\n    .catch((err) => console.log(err.message))\n}\n\nconst hideLoginInputs = () => {\n  showValues.showLoginInputsValue = false\n}\n\nconst showLoginInputs = () => {\n  showValues.showLoginInputsValue = true\n  hideRegisterInputs()\n}\n\nconst hideRegisterInputs = () => {\n  showValues.showRegisterInputsValue = false\n}\n\nconst showRegisterInputs = () => {\n  showValues.showRegisterInputsValue = true\n  hideLoginInputs()\n}\n\nconst checkEmailExistense = () => {\n  if (form.email) {\n    const uri = 'https://web.leadertask.com/api/v1/users/exists?email=' + form.email\n    axios.get(uri)\n      .then(() => {\n        showLoginInputs()\n      })\n      .catch(() => {\n        showRegisterInputs()\n      })\n  }\n}\n\n</script>\n<template>\n  <full-screen-section\n    v-slot=\"{ cardClass, cardRounded }\"\n    bg=\"login\"\n  >\n    <card-component\n      :class=\"cardClass\"\n      :rounded=\"cardRounded\"\n      form\n      @submit.prevent=\"submit\"\n    >\n      <field\n        label=\"Email\"\n        help=\"Please enter your email\"\n      >\n        <control\n          v-model=\"form.email\"\n          @blur=\"checkEmailExistense\"\n          :icon=\"mdiAccount\"\n          name=\"email\"\n          autocomplete=\"email\"\n          required\n        />\n      </field>\n\n  <transition-group name=\"slide-fade\">\n    <div v-if=\"showValues.showLoginInputsValue\">\n      <field\n        label=\"Password\"\n        help=\"Please enter your password\"\n      >\n        <control\n          v-model=\"form.password\"\n          :icon=\"mdiAsterisk\"\n          type=\"password\"\n          name=\"password\"\n          autocomplete=\"current-password\"\n        />\n      </field>\n    </div>\n  </transition-group>\n\n  <transition-group name=\"slide-fade\">\n    <div v-if=\"showValues.showRegisterInputsValue\">\n      <field\n        label=\"Password\"\n        help=\"Please enter your password\"\n      >\n        <control\n          v-model=\"form.password\"\n          :icon=\"mdiAsterisk\"\n          type=\"password\"\n          name=\"password\"\n          autocomplete=\"current-password\"\n        />\n      </field>\n\n      <field\n        label=\"Username\"\n        help=\"Plase enter your username\"\n      >\n        <control\n          v-model=\"form.username\"\n          type=\"text\"\n          name=\"username\"\n          autocomplete=\"username\"\n        />\n      </field>\n    </div>\n  </transition-group>\n\n      <divider />\n\n      <jb-buttons>\n        <jb-button\n          type=\"submit\"\n          color=\"info\"\n          label=\"Submit\"\n        />\n      </jb-buttons>\n    </card-component>\n  </full-screen-section>\n</template>\n\n<style>\n\n.error-message {\n  color: #8D021F;\n  font-size: 14px;\n}\n\n.slide-fade-enter-active {\n  transition: all 0.3s ease-out;\n}\n\n.slide-fade-leave-active {\n  transition: all 0.3s cubic-bezier(1, 0.5, 0.8, 1);\n}\n\n.slide-fade-enter-from,\n.slide-fade-leave-to {\n  transform: translateX(75px);\n  opacity: 0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}